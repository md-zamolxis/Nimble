//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nimble.Windows.Client.Security {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Security.ISecurity")]
    public interface ISecurity {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/EmplacementCreate", ReplyAction="http://tempuri.org/ISecurity/EmplacementCreateResponse")]
        Nimble.Business.Library.Model.Framework.Security.Emplacement EmplacementCreate(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/EmplacementCreate", ReplyAction="http://tempuri.org/ISecurity/EmplacementCreateResponse")]
        System.IAsyncResult BeginEmplacementCreate(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Emplacement EndEmplacementCreate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/EmplacementRead", ReplyAction="http://tempuri.org/ISecurity/EmplacementReadResponse")]
        Nimble.Business.Library.Model.Framework.Security.Emplacement EmplacementRead(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/EmplacementRead", ReplyAction="http://tempuri.org/ISecurity/EmplacementReadResponse")]
        System.IAsyncResult BeginEmplacementRead(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Emplacement EndEmplacementRead(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/EmplacementUpdate", ReplyAction="http://tempuri.org/ISecurity/EmplacementUpdateResponse")]
        Nimble.Business.Library.Model.Framework.Security.Emplacement EmplacementUpdate(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/EmplacementUpdate", ReplyAction="http://tempuri.org/ISecurity/EmplacementUpdateResponse")]
        System.IAsyncResult BeginEmplacementUpdate(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Emplacement EndEmplacementUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/EmplacementDelete", ReplyAction="http://tempuri.org/ISecurity/EmplacementDeleteResponse")]
        bool EmplacementDelete(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/EmplacementDelete", ReplyAction="http://tempuri.org/ISecurity/EmplacementDeleteResponse")]
        System.IAsyncResult BeginEmplacementDelete(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement, System.AsyncCallback callback, object asyncState);
        
        bool EndEmplacementDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/EmplacementSearch", ReplyAction="http://tempuri.org/ISecurity/EmplacementSearchResponse")]
        Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Emplacement> EmplacementSearch(Nimble.Business.Library.Model.Framework.Security.EmplacementPredicate emplacementPredicate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/EmplacementSearch", ReplyAction="http://tempuri.org/ISecurity/EmplacementSearchResponse")]
        System.IAsyncResult BeginEmplacementSearch(Nimble.Business.Library.Model.Framework.Security.EmplacementPredicate emplacementPredicate, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Emplacement> EndEmplacementSearch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/ApplicationCreate", ReplyAction="http://tempuri.org/ISecurity/ApplicationCreateResponse")]
        Nimble.Business.Library.Model.Framework.Security.Application ApplicationCreate(Nimble.Business.Library.Model.Framework.Security.Application application);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/ApplicationCreate", ReplyAction="http://tempuri.org/ISecurity/ApplicationCreateResponse")]
        System.IAsyncResult BeginApplicationCreate(Nimble.Business.Library.Model.Framework.Security.Application application, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Application EndApplicationCreate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/ApplicationRead", ReplyAction="http://tempuri.org/ISecurity/ApplicationReadResponse")]
        Nimble.Business.Library.Model.Framework.Security.Application ApplicationRead(Nimble.Business.Library.Model.Framework.Security.Application application);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/ApplicationRead", ReplyAction="http://tempuri.org/ISecurity/ApplicationReadResponse")]
        System.IAsyncResult BeginApplicationRead(Nimble.Business.Library.Model.Framework.Security.Application application, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Application EndApplicationRead(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/ApplicationUpdate", ReplyAction="http://tempuri.org/ISecurity/ApplicationUpdateResponse")]
        Nimble.Business.Library.Model.Framework.Security.Application ApplicationUpdate(Nimble.Business.Library.Model.Framework.Security.Application application);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/ApplicationUpdate", ReplyAction="http://tempuri.org/ISecurity/ApplicationUpdateResponse")]
        System.IAsyncResult BeginApplicationUpdate(Nimble.Business.Library.Model.Framework.Security.Application application, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Application EndApplicationUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/ApplicationDelete", ReplyAction="http://tempuri.org/ISecurity/ApplicationDeleteResponse")]
        bool ApplicationDelete(Nimble.Business.Library.Model.Framework.Security.Application application);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/ApplicationDelete", ReplyAction="http://tempuri.org/ISecurity/ApplicationDeleteResponse")]
        System.IAsyncResult BeginApplicationDelete(Nimble.Business.Library.Model.Framework.Security.Application application, System.AsyncCallback callback, object asyncState);
        
        bool EndApplicationDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/ApplicationSearch", ReplyAction="http://tempuri.org/ISecurity/ApplicationSearchResponse")]
        Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Application> ApplicationSearch(Nimble.Business.Library.Model.Framework.Security.ApplicationPredicate applicationPredicate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/ApplicationSearch", ReplyAction="http://tempuri.org/ISecurity/ApplicationSearchResponse")]
        System.IAsyncResult BeginApplicationSearch(Nimble.Business.Library.Model.Framework.Security.ApplicationPredicate applicationPredicate, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Application> EndApplicationSearch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/UserCreate", ReplyAction="http://tempuri.org/ISecurity/UserCreateResponse")]
        Nimble.Business.Library.Model.Framework.Security.User UserCreate(Nimble.Business.Library.Model.Framework.Security.User user);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/UserCreate", ReplyAction="http://tempuri.org/ISecurity/UserCreateResponse")]
        System.IAsyncResult BeginUserCreate(Nimble.Business.Library.Model.Framework.Security.User user, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.User EndUserCreate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/UserRead", ReplyAction="http://tempuri.org/ISecurity/UserReadResponse")]
        Nimble.Business.Library.Model.Framework.Security.User UserRead(Nimble.Business.Library.Model.Framework.Security.User user);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/UserRead", ReplyAction="http://tempuri.org/ISecurity/UserReadResponse")]
        System.IAsyncResult BeginUserRead(Nimble.Business.Library.Model.Framework.Security.User user, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.User EndUserRead(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/UserUpdate", ReplyAction="http://tempuri.org/ISecurity/UserUpdateResponse")]
        Nimble.Business.Library.Model.Framework.Security.User UserUpdate(Nimble.Business.Library.Model.Framework.Security.User user);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/UserUpdate", ReplyAction="http://tempuri.org/ISecurity/UserUpdateResponse")]
        System.IAsyncResult BeginUserUpdate(Nimble.Business.Library.Model.Framework.Security.User user, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.User EndUserUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/UserDelete", ReplyAction="http://tempuri.org/ISecurity/UserDeleteResponse")]
        bool UserDelete(Nimble.Business.Library.Model.Framework.Security.User user);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/UserDelete", ReplyAction="http://tempuri.org/ISecurity/UserDeleteResponse")]
        System.IAsyncResult BeginUserDelete(Nimble.Business.Library.Model.Framework.Security.User user, System.AsyncCallback callback, object asyncState);
        
        bool EndUserDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/UserSearch", ReplyAction="http://tempuri.org/ISecurity/UserSearchResponse")]
        Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.User> UserSearch(Nimble.Business.Library.Model.Framework.Security.UserPredicate userPredicate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/UserSearch", ReplyAction="http://tempuri.org/ISecurity/UserSearchResponse")]
        System.IAsyncResult BeginUserSearch(Nimble.Business.Library.Model.Framework.Security.UserPredicate userPredicate, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.User> EndUserSearch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/UserChange", ReplyAction="http://tempuri.org/ISecurity/UserChangeResponse")]
        Nimble.Business.Library.Model.Framework.Security.User UserChange(Nimble.Business.Library.Model.Framework.Security.User user, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/UserChange", ReplyAction="http://tempuri.org/ISecurity/UserChangeResponse")]
        System.IAsyncResult BeginUserChange(Nimble.Business.Library.Model.Framework.Security.User user, string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.User EndUserChange(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/AccountCreate", ReplyAction="http://tempuri.org/ISecurity/AccountCreateResponse")]
        Nimble.Business.Library.Model.Framework.Security.Account AccountCreate(Nimble.Business.Library.Model.Framework.Security.Account account);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/AccountCreate", ReplyAction="http://tempuri.org/ISecurity/AccountCreateResponse")]
        System.IAsyncResult BeginAccountCreate(Nimble.Business.Library.Model.Framework.Security.Account account, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Account EndAccountCreate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/AccountRead", ReplyAction="http://tempuri.org/ISecurity/AccountReadResponse")]
        Nimble.Business.Library.Model.Framework.Security.Account AccountRead(Nimble.Business.Library.Model.Framework.Security.Account account);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/AccountRead", ReplyAction="http://tempuri.org/ISecurity/AccountReadResponse")]
        System.IAsyncResult BeginAccountRead(Nimble.Business.Library.Model.Framework.Security.Account account, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Account EndAccountRead(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/AccountUpdate", ReplyAction="http://tempuri.org/ISecurity/AccountUpdateResponse")]
        Nimble.Business.Library.Model.Framework.Security.Account AccountUpdate(Nimble.Business.Library.Model.Framework.Security.Account account);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/AccountUpdate", ReplyAction="http://tempuri.org/ISecurity/AccountUpdateResponse")]
        System.IAsyncResult BeginAccountUpdate(Nimble.Business.Library.Model.Framework.Security.Account account, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Account EndAccountUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/AccountDelete", ReplyAction="http://tempuri.org/ISecurity/AccountDeleteResponse")]
        bool AccountDelete(Nimble.Business.Library.Model.Framework.Security.Account account);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/AccountDelete", ReplyAction="http://tempuri.org/ISecurity/AccountDeleteResponse")]
        System.IAsyncResult BeginAccountDelete(Nimble.Business.Library.Model.Framework.Security.Account account, System.AsyncCallback callback, object asyncState);
        
        bool EndAccountDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/AccountSearch", ReplyAction="http://tempuri.org/ISecurity/AccountSearchResponse")]
        Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Account> AccountSearch(Nimble.Business.Library.Model.Framework.Security.AccountPredicate accountPredicate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/AccountSearch", ReplyAction="http://tempuri.org/ISecurity/AccountSearchResponse")]
        System.IAsyncResult BeginAccountSearch(Nimble.Business.Library.Model.Framework.Security.AccountPredicate accountPredicate, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Account> EndAccountSearch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/PermissionCreate", ReplyAction="http://tempuri.org/ISecurity/PermissionCreateResponse")]
        Nimble.Business.Library.Model.Framework.Security.Permission PermissionCreate(Nimble.Business.Library.Model.Framework.Security.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/PermissionCreate", ReplyAction="http://tempuri.org/ISecurity/PermissionCreateResponse")]
        System.IAsyncResult BeginPermissionCreate(Nimble.Business.Library.Model.Framework.Security.Permission permission, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Permission EndPermissionCreate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/PermissionRead", ReplyAction="http://tempuri.org/ISecurity/PermissionReadResponse")]
        Nimble.Business.Library.Model.Framework.Security.Permission PermissionRead(Nimble.Business.Library.Model.Framework.Security.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/PermissionRead", ReplyAction="http://tempuri.org/ISecurity/PermissionReadResponse")]
        System.IAsyncResult BeginPermissionRead(Nimble.Business.Library.Model.Framework.Security.Permission permission, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Permission EndPermissionRead(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/PermissionUpdate", ReplyAction="http://tempuri.org/ISecurity/PermissionUpdateResponse")]
        Nimble.Business.Library.Model.Framework.Security.Permission PermissionUpdate(Nimble.Business.Library.Model.Framework.Security.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/PermissionUpdate", ReplyAction="http://tempuri.org/ISecurity/PermissionUpdateResponse")]
        System.IAsyncResult BeginPermissionUpdate(Nimble.Business.Library.Model.Framework.Security.Permission permission, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Permission EndPermissionUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/PermissionDelete", ReplyAction="http://tempuri.org/ISecurity/PermissionDeleteResponse")]
        bool PermissionDelete(Nimble.Business.Library.Model.Framework.Security.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/PermissionDelete", ReplyAction="http://tempuri.org/ISecurity/PermissionDeleteResponse")]
        System.IAsyncResult BeginPermissionDelete(Nimble.Business.Library.Model.Framework.Security.Permission permission, System.AsyncCallback callback, object asyncState);
        
        bool EndPermissionDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/PermissionSearch", ReplyAction="http://tempuri.org/ISecurity/PermissionSearchResponse")]
        Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Permission> PermissionSearch(Nimble.Business.Library.Model.Framework.Security.PermissionPredicate permissionPredicate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/PermissionSearch", ReplyAction="http://tempuri.org/ISecurity/PermissionSearchResponse")]
        System.IAsyncResult BeginPermissionSearch(Nimble.Business.Library.Model.Framework.Security.PermissionPredicate permissionPredicate, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Permission> EndPermissionSearch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/RoleCreate", ReplyAction="http://tempuri.org/ISecurity/RoleCreateResponse")]
        Nimble.Business.Library.Model.Framework.Security.Role RoleCreate(Nimble.Business.Library.Model.Framework.Security.Role role);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/RoleCreate", ReplyAction="http://tempuri.org/ISecurity/RoleCreateResponse")]
        System.IAsyncResult BeginRoleCreate(Nimble.Business.Library.Model.Framework.Security.Role role, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Role EndRoleCreate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/RoleRead", ReplyAction="http://tempuri.org/ISecurity/RoleReadResponse")]
        Nimble.Business.Library.Model.Framework.Security.Role RoleRead(Nimble.Business.Library.Model.Framework.Security.Role role);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/RoleRead", ReplyAction="http://tempuri.org/ISecurity/RoleReadResponse")]
        System.IAsyncResult BeginRoleRead(Nimble.Business.Library.Model.Framework.Security.Role role, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Role EndRoleRead(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/RoleUpdate", ReplyAction="http://tempuri.org/ISecurity/RoleUpdateResponse")]
        Nimble.Business.Library.Model.Framework.Security.Role RoleUpdate(Nimble.Business.Library.Model.Framework.Security.Role role);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/RoleUpdate", ReplyAction="http://tempuri.org/ISecurity/RoleUpdateResponse")]
        System.IAsyncResult BeginRoleUpdate(Nimble.Business.Library.Model.Framework.Security.Role role, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Role EndRoleUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/RoleDelete", ReplyAction="http://tempuri.org/ISecurity/RoleDeleteResponse")]
        bool RoleDelete(Nimble.Business.Library.Model.Framework.Security.Role role);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/RoleDelete", ReplyAction="http://tempuri.org/ISecurity/RoleDeleteResponse")]
        System.IAsyncResult BeginRoleDelete(Nimble.Business.Library.Model.Framework.Security.Role role, System.AsyncCallback callback, object asyncState);
        
        bool EndRoleDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/RoleSearch", ReplyAction="http://tempuri.org/ISecurity/RoleSearchResponse")]
        Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Role> RoleSearch(Nimble.Business.Library.Model.Framework.Security.RolePredicate rolePredicate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/RoleSearch", ReplyAction="http://tempuri.org/ISecurity/RoleSearchResponse")]
        System.IAsyncResult BeginRoleSearch(Nimble.Business.Library.Model.Framework.Security.RolePredicate rolePredicate, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Role> EndRoleSearch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/LogCreate", ReplyAction="http://tempuri.org/ISecurity/LogCreateResponse")]
        Nimble.Business.Library.Model.Framework.Security.Log LogCreate(Nimble.Business.Library.Model.Framework.Security.Log log);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/LogCreate", ReplyAction="http://tempuri.org/ISecurity/LogCreateResponse")]
        System.IAsyncResult BeginLogCreate(Nimble.Business.Library.Model.Framework.Security.Log log, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Log EndLogCreate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/LogRead", ReplyAction="http://tempuri.org/ISecurity/LogReadResponse")]
        Nimble.Business.Library.Model.Framework.Security.Log LogRead(Nimble.Business.Library.Model.Framework.Security.Log log);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/LogRead", ReplyAction="http://tempuri.org/ISecurity/LogReadResponse")]
        System.IAsyncResult BeginLogRead(Nimble.Business.Library.Model.Framework.Security.Log log, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.Model.Framework.Security.Log EndLogRead(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISecurity/LogSearch", ReplyAction="http://tempuri.org/ISecurity/LogSearchResponse")]
        Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Log> LogSearch(Nimble.Business.Library.Model.Framework.Security.LogPredicate logPredicate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecurity/LogSearch", ReplyAction="http://tempuri.org/ISecurity/LogSearchResponse")]
        System.IAsyncResult BeginLogSearch(Nimble.Business.Library.Model.Framework.Security.LogPredicate logPredicate, System.AsyncCallback callback, object asyncState);
        
        Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Log> EndLogSearch(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISecurityChannel : Nimble.Windows.Client.Security.ISecurity, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmplacementCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EmplacementCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Emplacement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Emplacement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmplacementReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EmplacementReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Emplacement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Emplacement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmplacementUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EmplacementUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Emplacement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Emplacement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmplacementDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EmplacementDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmplacementSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EmplacementSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Emplacement> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Emplacement>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ApplicationCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Application Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Application)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ApplicationReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Application Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Application)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ApplicationUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Application Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Application)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ApplicationDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ApplicationSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Application> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Application>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UserChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AccountCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Account Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Account)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AccountReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Account Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Account)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AccountUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Account Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Account)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AccountDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AccountSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Account> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Account>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PermissionCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PermissionCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Permission Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Permission)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PermissionReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PermissionReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Permission Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Permission)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PermissionUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PermissionUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Permission Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Permission)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PermissionDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PermissionDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PermissionSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PermissionSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Permission> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Permission>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RoleCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Role Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Role)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RoleReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Role Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Role)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RoleUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Role Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Role)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RoleDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RoleSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Role> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Role>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogCreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LogCreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Log Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Log)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LogReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Log Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.Model.Framework.Security.Log)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LogSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Log> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Log>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityClient : System.ServiceModel.ClientBase<Nimble.Windows.Client.Security.ISecurity>, Nimble.Windows.Client.Security.ISecurity {
        
        private BeginOperationDelegate onBeginEmplacementCreateDelegate;
        
        private EndOperationDelegate onEndEmplacementCreateDelegate;
        
        private System.Threading.SendOrPostCallback onEmplacementCreateCompletedDelegate;
        
        private BeginOperationDelegate onBeginEmplacementReadDelegate;
        
        private EndOperationDelegate onEndEmplacementReadDelegate;
        
        private System.Threading.SendOrPostCallback onEmplacementReadCompletedDelegate;
        
        private BeginOperationDelegate onBeginEmplacementUpdateDelegate;
        
        private EndOperationDelegate onEndEmplacementUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onEmplacementUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginEmplacementDeleteDelegate;
        
        private EndOperationDelegate onEndEmplacementDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onEmplacementDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginEmplacementSearchDelegate;
        
        private EndOperationDelegate onEndEmplacementSearchDelegate;
        
        private System.Threading.SendOrPostCallback onEmplacementSearchCompletedDelegate;
        
        private BeginOperationDelegate onBeginApplicationCreateDelegate;
        
        private EndOperationDelegate onEndApplicationCreateDelegate;
        
        private System.Threading.SendOrPostCallback onApplicationCreateCompletedDelegate;
        
        private BeginOperationDelegate onBeginApplicationReadDelegate;
        
        private EndOperationDelegate onEndApplicationReadDelegate;
        
        private System.Threading.SendOrPostCallback onApplicationReadCompletedDelegate;
        
        private BeginOperationDelegate onBeginApplicationUpdateDelegate;
        
        private EndOperationDelegate onEndApplicationUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onApplicationUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginApplicationDeleteDelegate;
        
        private EndOperationDelegate onEndApplicationDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onApplicationDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginApplicationSearchDelegate;
        
        private EndOperationDelegate onEndApplicationSearchDelegate;
        
        private System.Threading.SendOrPostCallback onApplicationSearchCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserCreateDelegate;
        
        private EndOperationDelegate onEndUserCreateDelegate;
        
        private System.Threading.SendOrPostCallback onUserCreateCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserReadDelegate;
        
        private EndOperationDelegate onEndUserReadDelegate;
        
        private System.Threading.SendOrPostCallback onUserReadCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserUpdateDelegate;
        
        private EndOperationDelegate onEndUserUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onUserUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserDeleteDelegate;
        
        private EndOperationDelegate onEndUserDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onUserDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserSearchDelegate;
        
        private EndOperationDelegate onEndUserSearchDelegate;
        
        private System.Threading.SendOrPostCallback onUserSearchCompletedDelegate;
        
        private BeginOperationDelegate onBeginUserChangeDelegate;
        
        private EndOperationDelegate onEndUserChangeDelegate;
        
        private System.Threading.SendOrPostCallback onUserChangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginAccountCreateDelegate;
        
        private EndOperationDelegate onEndAccountCreateDelegate;
        
        private System.Threading.SendOrPostCallback onAccountCreateCompletedDelegate;
        
        private BeginOperationDelegate onBeginAccountReadDelegate;
        
        private EndOperationDelegate onEndAccountReadDelegate;
        
        private System.Threading.SendOrPostCallback onAccountReadCompletedDelegate;
        
        private BeginOperationDelegate onBeginAccountUpdateDelegate;
        
        private EndOperationDelegate onEndAccountUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onAccountUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginAccountDeleteDelegate;
        
        private EndOperationDelegate onEndAccountDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onAccountDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginAccountSearchDelegate;
        
        private EndOperationDelegate onEndAccountSearchDelegate;
        
        private System.Threading.SendOrPostCallback onAccountSearchCompletedDelegate;
        
        private BeginOperationDelegate onBeginPermissionCreateDelegate;
        
        private EndOperationDelegate onEndPermissionCreateDelegate;
        
        private System.Threading.SendOrPostCallback onPermissionCreateCompletedDelegate;
        
        private BeginOperationDelegate onBeginPermissionReadDelegate;
        
        private EndOperationDelegate onEndPermissionReadDelegate;
        
        private System.Threading.SendOrPostCallback onPermissionReadCompletedDelegate;
        
        private BeginOperationDelegate onBeginPermissionUpdateDelegate;
        
        private EndOperationDelegate onEndPermissionUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onPermissionUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginPermissionDeleteDelegate;
        
        private EndOperationDelegate onEndPermissionDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onPermissionDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginPermissionSearchDelegate;
        
        private EndOperationDelegate onEndPermissionSearchDelegate;
        
        private System.Threading.SendOrPostCallback onPermissionSearchCompletedDelegate;
        
        private BeginOperationDelegate onBeginRoleCreateDelegate;
        
        private EndOperationDelegate onEndRoleCreateDelegate;
        
        private System.Threading.SendOrPostCallback onRoleCreateCompletedDelegate;
        
        private BeginOperationDelegate onBeginRoleReadDelegate;
        
        private EndOperationDelegate onEndRoleReadDelegate;
        
        private System.Threading.SendOrPostCallback onRoleReadCompletedDelegate;
        
        private BeginOperationDelegate onBeginRoleUpdateDelegate;
        
        private EndOperationDelegate onEndRoleUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onRoleUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginRoleDeleteDelegate;
        
        private EndOperationDelegate onEndRoleDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onRoleDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginRoleSearchDelegate;
        
        private EndOperationDelegate onEndRoleSearchDelegate;
        
        private System.Threading.SendOrPostCallback onRoleSearchCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogCreateDelegate;
        
        private EndOperationDelegate onEndLogCreateDelegate;
        
        private System.Threading.SendOrPostCallback onLogCreateCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogReadDelegate;
        
        private EndOperationDelegate onEndLogReadDelegate;
        
        private System.Threading.SendOrPostCallback onLogReadCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogSearchDelegate;
        
        private EndOperationDelegate onEndLogSearchDelegate;
        
        private System.Threading.SendOrPostCallback onLogSearchCompletedDelegate;
        
        public SecurityClient() {
        }
        
        public SecurityClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SecurityClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecurityClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecurityClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<EmplacementCreateCompletedEventArgs> EmplacementCreateCompleted;
        
        public event System.EventHandler<EmplacementReadCompletedEventArgs> EmplacementReadCompleted;
        
        public event System.EventHandler<EmplacementUpdateCompletedEventArgs> EmplacementUpdateCompleted;
        
        public event System.EventHandler<EmplacementDeleteCompletedEventArgs> EmplacementDeleteCompleted;
        
        public event System.EventHandler<EmplacementSearchCompletedEventArgs> EmplacementSearchCompleted;
        
        public event System.EventHandler<ApplicationCreateCompletedEventArgs> ApplicationCreateCompleted;
        
        public event System.EventHandler<ApplicationReadCompletedEventArgs> ApplicationReadCompleted;
        
        public event System.EventHandler<ApplicationUpdateCompletedEventArgs> ApplicationUpdateCompleted;
        
        public event System.EventHandler<ApplicationDeleteCompletedEventArgs> ApplicationDeleteCompleted;
        
        public event System.EventHandler<ApplicationSearchCompletedEventArgs> ApplicationSearchCompleted;
        
        public event System.EventHandler<UserCreateCompletedEventArgs> UserCreateCompleted;
        
        public event System.EventHandler<UserReadCompletedEventArgs> UserReadCompleted;
        
        public event System.EventHandler<UserUpdateCompletedEventArgs> UserUpdateCompleted;
        
        public event System.EventHandler<UserDeleteCompletedEventArgs> UserDeleteCompleted;
        
        public event System.EventHandler<UserSearchCompletedEventArgs> UserSearchCompleted;
        
        public event System.EventHandler<UserChangeCompletedEventArgs> UserChangeCompleted;
        
        public event System.EventHandler<AccountCreateCompletedEventArgs> AccountCreateCompleted;
        
        public event System.EventHandler<AccountReadCompletedEventArgs> AccountReadCompleted;
        
        public event System.EventHandler<AccountUpdateCompletedEventArgs> AccountUpdateCompleted;
        
        public event System.EventHandler<AccountDeleteCompletedEventArgs> AccountDeleteCompleted;
        
        public event System.EventHandler<AccountSearchCompletedEventArgs> AccountSearchCompleted;
        
        public event System.EventHandler<PermissionCreateCompletedEventArgs> PermissionCreateCompleted;
        
        public event System.EventHandler<PermissionReadCompletedEventArgs> PermissionReadCompleted;
        
        public event System.EventHandler<PermissionUpdateCompletedEventArgs> PermissionUpdateCompleted;
        
        public event System.EventHandler<PermissionDeleteCompletedEventArgs> PermissionDeleteCompleted;
        
        public event System.EventHandler<PermissionSearchCompletedEventArgs> PermissionSearchCompleted;
        
        public event System.EventHandler<RoleCreateCompletedEventArgs> RoleCreateCompleted;
        
        public event System.EventHandler<RoleReadCompletedEventArgs> RoleReadCompleted;
        
        public event System.EventHandler<RoleUpdateCompletedEventArgs> RoleUpdateCompleted;
        
        public event System.EventHandler<RoleDeleteCompletedEventArgs> RoleDeleteCompleted;
        
        public event System.EventHandler<RoleSearchCompletedEventArgs> RoleSearchCompleted;
        
        public event System.EventHandler<LogCreateCompletedEventArgs> LogCreateCompleted;
        
        public event System.EventHandler<LogReadCompletedEventArgs> LogReadCompleted;
        
        public event System.EventHandler<LogSearchCompletedEventArgs> LogSearchCompleted;
        
        public Nimble.Business.Library.Model.Framework.Security.Emplacement EmplacementCreate(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement) {
            return base.Channel.EmplacementCreate(emplacement);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEmplacementCreate(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmplacementCreate(emplacement, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Emplacement EndEmplacementCreate(System.IAsyncResult result) {
            return base.Channel.EndEmplacementCreate(result);
        }
        
        private System.IAsyncResult OnBeginEmplacementCreate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement = ((Nimble.Business.Library.Model.Framework.Security.Emplacement)(inValues[0]));
            return this.BeginEmplacementCreate(emplacement, callback, asyncState);
        }
        
        private object[] OnEndEmplacementCreate(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Emplacement retVal = this.EndEmplacementCreate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEmplacementCreateCompleted(object state) {
            if ((this.EmplacementCreateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmplacementCreateCompleted(this, new EmplacementCreateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmplacementCreateAsync(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement) {
            this.EmplacementCreateAsync(emplacement, null);
        }
        
        public void EmplacementCreateAsync(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement, object userState) {
            if ((this.onBeginEmplacementCreateDelegate == null)) {
                this.onBeginEmplacementCreateDelegate = new BeginOperationDelegate(this.OnBeginEmplacementCreate);
            }
            if ((this.onEndEmplacementCreateDelegate == null)) {
                this.onEndEmplacementCreateDelegate = new EndOperationDelegate(this.OnEndEmplacementCreate);
            }
            if ((this.onEmplacementCreateCompletedDelegate == null)) {
                this.onEmplacementCreateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmplacementCreateCompleted);
            }
            base.InvokeAsync(this.onBeginEmplacementCreateDelegate, new object[] {
                        emplacement}, this.onEndEmplacementCreateDelegate, this.onEmplacementCreateCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Emplacement EmplacementRead(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement) {
            return base.Channel.EmplacementRead(emplacement);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEmplacementRead(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmplacementRead(emplacement, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Emplacement EndEmplacementRead(System.IAsyncResult result) {
            return base.Channel.EndEmplacementRead(result);
        }
        
        private System.IAsyncResult OnBeginEmplacementRead(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement = ((Nimble.Business.Library.Model.Framework.Security.Emplacement)(inValues[0]));
            return this.BeginEmplacementRead(emplacement, callback, asyncState);
        }
        
        private object[] OnEndEmplacementRead(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Emplacement retVal = this.EndEmplacementRead(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEmplacementReadCompleted(object state) {
            if ((this.EmplacementReadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmplacementReadCompleted(this, new EmplacementReadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmplacementReadAsync(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement) {
            this.EmplacementReadAsync(emplacement, null);
        }
        
        public void EmplacementReadAsync(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement, object userState) {
            if ((this.onBeginEmplacementReadDelegate == null)) {
                this.onBeginEmplacementReadDelegate = new BeginOperationDelegate(this.OnBeginEmplacementRead);
            }
            if ((this.onEndEmplacementReadDelegate == null)) {
                this.onEndEmplacementReadDelegate = new EndOperationDelegate(this.OnEndEmplacementRead);
            }
            if ((this.onEmplacementReadCompletedDelegate == null)) {
                this.onEmplacementReadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmplacementReadCompleted);
            }
            base.InvokeAsync(this.onBeginEmplacementReadDelegate, new object[] {
                        emplacement}, this.onEndEmplacementReadDelegate, this.onEmplacementReadCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Emplacement EmplacementUpdate(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement) {
            return base.Channel.EmplacementUpdate(emplacement);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEmplacementUpdate(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmplacementUpdate(emplacement, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Emplacement EndEmplacementUpdate(System.IAsyncResult result) {
            return base.Channel.EndEmplacementUpdate(result);
        }
        
        private System.IAsyncResult OnBeginEmplacementUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement = ((Nimble.Business.Library.Model.Framework.Security.Emplacement)(inValues[0]));
            return this.BeginEmplacementUpdate(emplacement, callback, asyncState);
        }
        
        private object[] OnEndEmplacementUpdate(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Emplacement retVal = this.EndEmplacementUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEmplacementUpdateCompleted(object state) {
            if ((this.EmplacementUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmplacementUpdateCompleted(this, new EmplacementUpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmplacementUpdateAsync(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement) {
            this.EmplacementUpdateAsync(emplacement, null);
        }
        
        public void EmplacementUpdateAsync(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement, object userState) {
            if ((this.onBeginEmplacementUpdateDelegate == null)) {
                this.onBeginEmplacementUpdateDelegate = new BeginOperationDelegate(this.OnBeginEmplacementUpdate);
            }
            if ((this.onEndEmplacementUpdateDelegate == null)) {
                this.onEndEmplacementUpdateDelegate = new EndOperationDelegate(this.OnEndEmplacementUpdate);
            }
            if ((this.onEmplacementUpdateCompletedDelegate == null)) {
                this.onEmplacementUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmplacementUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginEmplacementUpdateDelegate, new object[] {
                        emplacement}, this.onEndEmplacementUpdateDelegate, this.onEmplacementUpdateCompletedDelegate, userState);
        }
        
        public bool EmplacementDelete(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement) {
            return base.Channel.EmplacementDelete(emplacement);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEmplacementDelete(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmplacementDelete(emplacement, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndEmplacementDelete(System.IAsyncResult result) {
            return base.Channel.EndEmplacementDelete(result);
        }
        
        private System.IAsyncResult OnBeginEmplacementDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement = ((Nimble.Business.Library.Model.Framework.Security.Emplacement)(inValues[0]));
            return this.BeginEmplacementDelete(emplacement, callback, asyncState);
        }
        
        private object[] OnEndEmplacementDelete(System.IAsyncResult result) {
            bool retVal = this.EndEmplacementDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEmplacementDeleteCompleted(object state) {
            if ((this.EmplacementDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmplacementDeleteCompleted(this, new EmplacementDeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmplacementDeleteAsync(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement) {
            this.EmplacementDeleteAsync(emplacement, null);
        }
        
        public void EmplacementDeleteAsync(Nimble.Business.Library.Model.Framework.Security.Emplacement emplacement, object userState) {
            if ((this.onBeginEmplacementDeleteDelegate == null)) {
                this.onBeginEmplacementDeleteDelegate = new BeginOperationDelegate(this.OnBeginEmplacementDelete);
            }
            if ((this.onEndEmplacementDeleteDelegate == null)) {
                this.onEndEmplacementDeleteDelegate = new EndOperationDelegate(this.OnEndEmplacementDelete);
            }
            if ((this.onEmplacementDeleteCompletedDelegate == null)) {
                this.onEmplacementDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmplacementDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginEmplacementDeleteDelegate, new object[] {
                        emplacement}, this.onEndEmplacementDeleteDelegate, this.onEmplacementDeleteCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Emplacement> EmplacementSearch(Nimble.Business.Library.Model.Framework.Security.EmplacementPredicate emplacementPredicate) {
            return base.Channel.EmplacementSearch(emplacementPredicate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEmplacementSearch(Nimble.Business.Library.Model.Framework.Security.EmplacementPredicate emplacementPredicate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmplacementSearch(emplacementPredicate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Emplacement> EndEmplacementSearch(System.IAsyncResult result) {
            return base.Channel.EndEmplacementSearch(result);
        }
        
        private System.IAsyncResult OnBeginEmplacementSearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.EmplacementPredicate emplacementPredicate = ((Nimble.Business.Library.Model.Framework.Security.EmplacementPredicate)(inValues[0]));
            return this.BeginEmplacementSearch(emplacementPredicate, callback, asyncState);
        }
        
        private object[] OnEndEmplacementSearch(System.IAsyncResult result) {
            Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Emplacement> retVal = this.EndEmplacementSearch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEmplacementSearchCompleted(object state) {
            if ((this.EmplacementSearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmplacementSearchCompleted(this, new EmplacementSearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmplacementSearchAsync(Nimble.Business.Library.Model.Framework.Security.EmplacementPredicate emplacementPredicate) {
            this.EmplacementSearchAsync(emplacementPredicate, null);
        }
        
        public void EmplacementSearchAsync(Nimble.Business.Library.Model.Framework.Security.EmplacementPredicate emplacementPredicate, object userState) {
            if ((this.onBeginEmplacementSearchDelegate == null)) {
                this.onBeginEmplacementSearchDelegate = new BeginOperationDelegate(this.OnBeginEmplacementSearch);
            }
            if ((this.onEndEmplacementSearchDelegate == null)) {
                this.onEndEmplacementSearchDelegate = new EndOperationDelegate(this.OnEndEmplacementSearch);
            }
            if ((this.onEmplacementSearchCompletedDelegate == null)) {
                this.onEmplacementSearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmplacementSearchCompleted);
            }
            base.InvokeAsync(this.onBeginEmplacementSearchDelegate, new object[] {
                        emplacementPredicate}, this.onEndEmplacementSearchDelegate, this.onEmplacementSearchCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Application ApplicationCreate(Nimble.Business.Library.Model.Framework.Security.Application application) {
            return base.Channel.ApplicationCreate(application);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginApplicationCreate(Nimble.Business.Library.Model.Framework.Security.Application application, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApplicationCreate(application, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Application EndApplicationCreate(System.IAsyncResult result) {
            return base.Channel.EndApplicationCreate(result);
        }
        
        private System.IAsyncResult OnBeginApplicationCreate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Application application = ((Nimble.Business.Library.Model.Framework.Security.Application)(inValues[0]));
            return this.BeginApplicationCreate(application, callback, asyncState);
        }
        
        private object[] OnEndApplicationCreate(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Application retVal = this.EndApplicationCreate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnApplicationCreateCompleted(object state) {
            if ((this.ApplicationCreateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApplicationCreateCompleted(this, new ApplicationCreateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApplicationCreateAsync(Nimble.Business.Library.Model.Framework.Security.Application application) {
            this.ApplicationCreateAsync(application, null);
        }
        
        public void ApplicationCreateAsync(Nimble.Business.Library.Model.Framework.Security.Application application, object userState) {
            if ((this.onBeginApplicationCreateDelegate == null)) {
                this.onBeginApplicationCreateDelegate = new BeginOperationDelegate(this.OnBeginApplicationCreate);
            }
            if ((this.onEndApplicationCreateDelegate == null)) {
                this.onEndApplicationCreateDelegate = new EndOperationDelegate(this.OnEndApplicationCreate);
            }
            if ((this.onApplicationCreateCompletedDelegate == null)) {
                this.onApplicationCreateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApplicationCreateCompleted);
            }
            base.InvokeAsync(this.onBeginApplicationCreateDelegate, new object[] {
                        application}, this.onEndApplicationCreateDelegate, this.onApplicationCreateCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Application ApplicationRead(Nimble.Business.Library.Model.Framework.Security.Application application) {
            return base.Channel.ApplicationRead(application);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginApplicationRead(Nimble.Business.Library.Model.Framework.Security.Application application, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApplicationRead(application, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Application EndApplicationRead(System.IAsyncResult result) {
            return base.Channel.EndApplicationRead(result);
        }
        
        private System.IAsyncResult OnBeginApplicationRead(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Application application = ((Nimble.Business.Library.Model.Framework.Security.Application)(inValues[0]));
            return this.BeginApplicationRead(application, callback, asyncState);
        }
        
        private object[] OnEndApplicationRead(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Application retVal = this.EndApplicationRead(result);
            return new object[] {
                    retVal};
        }
        
        private void OnApplicationReadCompleted(object state) {
            if ((this.ApplicationReadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApplicationReadCompleted(this, new ApplicationReadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApplicationReadAsync(Nimble.Business.Library.Model.Framework.Security.Application application) {
            this.ApplicationReadAsync(application, null);
        }
        
        public void ApplicationReadAsync(Nimble.Business.Library.Model.Framework.Security.Application application, object userState) {
            if ((this.onBeginApplicationReadDelegate == null)) {
                this.onBeginApplicationReadDelegate = new BeginOperationDelegate(this.OnBeginApplicationRead);
            }
            if ((this.onEndApplicationReadDelegate == null)) {
                this.onEndApplicationReadDelegate = new EndOperationDelegate(this.OnEndApplicationRead);
            }
            if ((this.onApplicationReadCompletedDelegate == null)) {
                this.onApplicationReadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApplicationReadCompleted);
            }
            base.InvokeAsync(this.onBeginApplicationReadDelegate, new object[] {
                        application}, this.onEndApplicationReadDelegate, this.onApplicationReadCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Application ApplicationUpdate(Nimble.Business.Library.Model.Framework.Security.Application application) {
            return base.Channel.ApplicationUpdate(application);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginApplicationUpdate(Nimble.Business.Library.Model.Framework.Security.Application application, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApplicationUpdate(application, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Application EndApplicationUpdate(System.IAsyncResult result) {
            return base.Channel.EndApplicationUpdate(result);
        }
        
        private System.IAsyncResult OnBeginApplicationUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Application application = ((Nimble.Business.Library.Model.Framework.Security.Application)(inValues[0]));
            return this.BeginApplicationUpdate(application, callback, asyncState);
        }
        
        private object[] OnEndApplicationUpdate(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Application retVal = this.EndApplicationUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnApplicationUpdateCompleted(object state) {
            if ((this.ApplicationUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApplicationUpdateCompleted(this, new ApplicationUpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApplicationUpdateAsync(Nimble.Business.Library.Model.Framework.Security.Application application) {
            this.ApplicationUpdateAsync(application, null);
        }
        
        public void ApplicationUpdateAsync(Nimble.Business.Library.Model.Framework.Security.Application application, object userState) {
            if ((this.onBeginApplicationUpdateDelegate == null)) {
                this.onBeginApplicationUpdateDelegate = new BeginOperationDelegate(this.OnBeginApplicationUpdate);
            }
            if ((this.onEndApplicationUpdateDelegate == null)) {
                this.onEndApplicationUpdateDelegate = new EndOperationDelegate(this.OnEndApplicationUpdate);
            }
            if ((this.onApplicationUpdateCompletedDelegate == null)) {
                this.onApplicationUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApplicationUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginApplicationUpdateDelegate, new object[] {
                        application}, this.onEndApplicationUpdateDelegate, this.onApplicationUpdateCompletedDelegate, userState);
        }
        
        public bool ApplicationDelete(Nimble.Business.Library.Model.Framework.Security.Application application) {
            return base.Channel.ApplicationDelete(application);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginApplicationDelete(Nimble.Business.Library.Model.Framework.Security.Application application, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApplicationDelete(application, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndApplicationDelete(System.IAsyncResult result) {
            return base.Channel.EndApplicationDelete(result);
        }
        
        private System.IAsyncResult OnBeginApplicationDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Application application = ((Nimble.Business.Library.Model.Framework.Security.Application)(inValues[0]));
            return this.BeginApplicationDelete(application, callback, asyncState);
        }
        
        private object[] OnEndApplicationDelete(System.IAsyncResult result) {
            bool retVal = this.EndApplicationDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnApplicationDeleteCompleted(object state) {
            if ((this.ApplicationDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApplicationDeleteCompleted(this, new ApplicationDeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApplicationDeleteAsync(Nimble.Business.Library.Model.Framework.Security.Application application) {
            this.ApplicationDeleteAsync(application, null);
        }
        
        public void ApplicationDeleteAsync(Nimble.Business.Library.Model.Framework.Security.Application application, object userState) {
            if ((this.onBeginApplicationDeleteDelegate == null)) {
                this.onBeginApplicationDeleteDelegate = new BeginOperationDelegate(this.OnBeginApplicationDelete);
            }
            if ((this.onEndApplicationDeleteDelegate == null)) {
                this.onEndApplicationDeleteDelegate = new EndOperationDelegate(this.OnEndApplicationDelete);
            }
            if ((this.onApplicationDeleteCompletedDelegate == null)) {
                this.onApplicationDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApplicationDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginApplicationDeleteDelegate, new object[] {
                        application}, this.onEndApplicationDeleteDelegate, this.onApplicationDeleteCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Application> ApplicationSearch(Nimble.Business.Library.Model.Framework.Security.ApplicationPredicate applicationPredicate) {
            return base.Channel.ApplicationSearch(applicationPredicate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginApplicationSearch(Nimble.Business.Library.Model.Framework.Security.ApplicationPredicate applicationPredicate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApplicationSearch(applicationPredicate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Application> EndApplicationSearch(System.IAsyncResult result) {
            return base.Channel.EndApplicationSearch(result);
        }
        
        private System.IAsyncResult OnBeginApplicationSearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.ApplicationPredicate applicationPredicate = ((Nimble.Business.Library.Model.Framework.Security.ApplicationPredicate)(inValues[0]));
            return this.BeginApplicationSearch(applicationPredicate, callback, asyncState);
        }
        
        private object[] OnEndApplicationSearch(System.IAsyncResult result) {
            Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Application> retVal = this.EndApplicationSearch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnApplicationSearchCompleted(object state) {
            if ((this.ApplicationSearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApplicationSearchCompleted(this, new ApplicationSearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApplicationSearchAsync(Nimble.Business.Library.Model.Framework.Security.ApplicationPredicate applicationPredicate) {
            this.ApplicationSearchAsync(applicationPredicate, null);
        }
        
        public void ApplicationSearchAsync(Nimble.Business.Library.Model.Framework.Security.ApplicationPredicate applicationPredicate, object userState) {
            if ((this.onBeginApplicationSearchDelegate == null)) {
                this.onBeginApplicationSearchDelegate = new BeginOperationDelegate(this.OnBeginApplicationSearch);
            }
            if ((this.onEndApplicationSearchDelegate == null)) {
                this.onEndApplicationSearchDelegate = new EndOperationDelegate(this.OnEndApplicationSearch);
            }
            if ((this.onApplicationSearchCompletedDelegate == null)) {
                this.onApplicationSearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApplicationSearchCompleted);
            }
            base.InvokeAsync(this.onBeginApplicationSearchDelegate, new object[] {
                        applicationPredicate}, this.onEndApplicationSearchDelegate, this.onApplicationSearchCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.User UserCreate(Nimble.Business.Library.Model.Framework.Security.User user) {
            return base.Channel.UserCreate(user);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUserCreate(Nimble.Business.Library.Model.Framework.Security.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserCreate(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.User EndUserCreate(System.IAsyncResult result) {
            return base.Channel.EndUserCreate(result);
        }
        
        private System.IAsyncResult OnBeginUserCreate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.User user = ((Nimble.Business.Library.Model.Framework.Security.User)(inValues[0]));
            return this.BeginUserCreate(user, callback, asyncState);
        }
        
        private object[] OnEndUserCreate(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.User retVal = this.EndUserCreate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserCreateCompleted(object state) {
            if ((this.UserCreateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserCreateCompleted(this, new UserCreateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserCreateAsync(Nimble.Business.Library.Model.Framework.Security.User user) {
            this.UserCreateAsync(user, null);
        }
        
        public void UserCreateAsync(Nimble.Business.Library.Model.Framework.Security.User user, object userState) {
            if ((this.onBeginUserCreateDelegate == null)) {
                this.onBeginUserCreateDelegate = new BeginOperationDelegate(this.OnBeginUserCreate);
            }
            if ((this.onEndUserCreateDelegate == null)) {
                this.onEndUserCreateDelegate = new EndOperationDelegate(this.OnEndUserCreate);
            }
            if ((this.onUserCreateCompletedDelegate == null)) {
                this.onUserCreateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserCreateCompleted);
            }
            base.InvokeAsync(this.onBeginUserCreateDelegate, new object[] {
                        user}, this.onEndUserCreateDelegate, this.onUserCreateCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.User UserRead(Nimble.Business.Library.Model.Framework.Security.User user) {
            return base.Channel.UserRead(user);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUserRead(Nimble.Business.Library.Model.Framework.Security.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserRead(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.User EndUserRead(System.IAsyncResult result) {
            return base.Channel.EndUserRead(result);
        }
        
        private System.IAsyncResult OnBeginUserRead(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.User user = ((Nimble.Business.Library.Model.Framework.Security.User)(inValues[0]));
            return this.BeginUserRead(user, callback, asyncState);
        }
        
        private object[] OnEndUserRead(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.User retVal = this.EndUserRead(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserReadCompleted(object state) {
            if ((this.UserReadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserReadCompleted(this, new UserReadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserReadAsync(Nimble.Business.Library.Model.Framework.Security.User user) {
            this.UserReadAsync(user, null);
        }
        
        public void UserReadAsync(Nimble.Business.Library.Model.Framework.Security.User user, object userState) {
            if ((this.onBeginUserReadDelegate == null)) {
                this.onBeginUserReadDelegate = new BeginOperationDelegate(this.OnBeginUserRead);
            }
            if ((this.onEndUserReadDelegate == null)) {
                this.onEndUserReadDelegate = new EndOperationDelegate(this.OnEndUserRead);
            }
            if ((this.onUserReadCompletedDelegate == null)) {
                this.onUserReadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserReadCompleted);
            }
            base.InvokeAsync(this.onBeginUserReadDelegate, new object[] {
                        user}, this.onEndUserReadDelegate, this.onUserReadCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.User UserUpdate(Nimble.Business.Library.Model.Framework.Security.User user) {
            return base.Channel.UserUpdate(user);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUserUpdate(Nimble.Business.Library.Model.Framework.Security.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserUpdate(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.User EndUserUpdate(System.IAsyncResult result) {
            return base.Channel.EndUserUpdate(result);
        }
        
        private System.IAsyncResult OnBeginUserUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.User user = ((Nimble.Business.Library.Model.Framework.Security.User)(inValues[0]));
            return this.BeginUserUpdate(user, callback, asyncState);
        }
        
        private object[] OnEndUserUpdate(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.User retVal = this.EndUserUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserUpdateCompleted(object state) {
            if ((this.UserUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserUpdateCompleted(this, new UserUpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserUpdateAsync(Nimble.Business.Library.Model.Framework.Security.User user) {
            this.UserUpdateAsync(user, null);
        }
        
        public void UserUpdateAsync(Nimble.Business.Library.Model.Framework.Security.User user, object userState) {
            if ((this.onBeginUserUpdateDelegate == null)) {
                this.onBeginUserUpdateDelegate = new BeginOperationDelegate(this.OnBeginUserUpdate);
            }
            if ((this.onEndUserUpdateDelegate == null)) {
                this.onEndUserUpdateDelegate = new EndOperationDelegate(this.OnEndUserUpdate);
            }
            if ((this.onUserUpdateCompletedDelegate == null)) {
                this.onUserUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginUserUpdateDelegate, new object[] {
                        user}, this.onEndUserUpdateDelegate, this.onUserUpdateCompletedDelegate, userState);
        }
        
        public bool UserDelete(Nimble.Business.Library.Model.Framework.Security.User user) {
            return base.Channel.UserDelete(user);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUserDelete(Nimble.Business.Library.Model.Framework.Security.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserDelete(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUserDelete(System.IAsyncResult result) {
            return base.Channel.EndUserDelete(result);
        }
        
        private System.IAsyncResult OnBeginUserDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.User user = ((Nimble.Business.Library.Model.Framework.Security.User)(inValues[0]));
            return this.BeginUserDelete(user, callback, asyncState);
        }
        
        private object[] OnEndUserDelete(System.IAsyncResult result) {
            bool retVal = this.EndUserDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserDeleteCompleted(object state) {
            if ((this.UserDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserDeleteCompleted(this, new UserDeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserDeleteAsync(Nimble.Business.Library.Model.Framework.Security.User user) {
            this.UserDeleteAsync(user, null);
        }
        
        public void UserDeleteAsync(Nimble.Business.Library.Model.Framework.Security.User user, object userState) {
            if ((this.onBeginUserDeleteDelegate == null)) {
                this.onBeginUserDeleteDelegate = new BeginOperationDelegate(this.OnBeginUserDelete);
            }
            if ((this.onEndUserDeleteDelegate == null)) {
                this.onEndUserDeleteDelegate = new EndOperationDelegate(this.OnEndUserDelete);
            }
            if ((this.onUserDeleteCompletedDelegate == null)) {
                this.onUserDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginUserDeleteDelegate, new object[] {
                        user}, this.onEndUserDeleteDelegate, this.onUserDeleteCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.User> UserSearch(Nimble.Business.Library.Model.Framework.Security.UserPredicate userPredicate) {
            return base.Channel.UserSearch(userPredicate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUserSearch(Nimble.Business.Library.Model.Framework.Security.UserPredicate userPredicate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserSearch(userPredicate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.User> EndUserSearch(System.IAsyncResult result) {
            return base.Channel.EndUserSearch(result);
        }
        
        private System.IAsyncResult OnBeginUserSearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.UserPredicate userPredicate = ((Nimble.Business.Library.Model.Framework.Security.UserPredicate)(inValues[0]));
            return this.BeginUserSearch(userPredicate, callback, asyncState);
        }
        
        private object[] OnEndUserSearch(System.IAsyncResult result) {
            Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.User> retVal = this.EndUserSearch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserSearchCompleted(object state) {
            if ((this.UserSearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserSearchCompleted(this, new UserSearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserSearchAsync(Nimble.Business.Library.Model.Framework.Security.UserPredicate userPredicate) {
            this.UserSearchAsync(userPredicate, null);
        }
        
        public void UserSearchAsync(Nimble.Business.Library.Model.Framework.Security.UserPredicate userPredicate, object userState) {
            if ((this.onBeginUserSearchDelegate == null)) {
                this.onBeginUserSearchDelegate = new BeginOperationDelegate(this.OnBeginUserSearch);
            }
            if ((this.onEndUserSearchDelegate == null)) {
                this.onEndUserSearchDelegate = new EndOperationDelegate(this.OnEndUserSearch);
            }
            if ((this.onUserSearchCompletedDelegate == null)) {
                this.onUserSearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserSearchCompleted);
            }
            base.InvokeAsync(this.onBeginUserSearchDelegate, new object[] {
                        userPredicate}, this.onEndUserSearchDelegate, this.onUserSearchCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.User UserChange(Nimble.Business.Library.Model.Framework.Security.User user, string oldPassword, string newPassword) {
            return base.Channel.UserChange(user, oldPassword, newPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUserChange(Nimble.Business.Library.Model.Framework.Security.User user, string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUserChange(user, oldPassword, newPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.User EndUserChange(System.IAsyncResult result) {
            return base.Channel.EndUserChange(result);
        }
        
        private System.IAsyncResult OnBeginUserChange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.User user = ((Nimble.Business.Library.Model.Framework.Security.User)(inValues[0]));
            string oldPassword = ((string)(inValues[1]));
            string newPassword = ((string)(inValues[2]));
            return this.BeginUserChange(user, oldPassword, newPassword, callback, asyncState);
        }
        
        private object[] OnEndUserChange(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.User retVal = this.EndUserChange(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUserChangeCompleted(object state) {
            if ((this.UserChangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UserChangeCompleted(this, new UserChangeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UserChangeAsync(Nimble.Business.Library.Model.Framework.Security.User user, string oldPassword, string newPassword) {
            this.UserChangeAsync(user, oldPassword, newPassword, null);
        }
        
        public void UserChangeAsync(Nimble.Business.Library.Model.Framework.Security.User user, string oldPassword, string newPassword, object userState) {
            if ((this.onBeginUserChangeDelegate == null)) {
                this.onBeginUserChangeDelegate = new BeginOperationDelegate(this.OnBeginUserChange);
            }
            if ((this.onEndUserChangeDelegate == null)) {
                this.onEndUserChangeDelegate = new EndOperationDelegate(this.OnEndUserChange);
            }
            if ((this.onUserChangeCompletedDelegate == null)) {
                this.onUserChangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUserChangeCompleted);
            }
            base.InvokeAsync(this.onBeginUserChangeDelegate, new object[] {
                        user,
                        oldPassword,
                        newPassword}, this.onEndUserChangeDelegate, this.onUserChangeCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Account AccountCreate(Nimble.Business.Library.Model.Framework.Security.Account account) {
            return base.Channel.AccountCreate(account);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAccountCreate(Nimble.Business.Library.Model.Framework.Security.Account account, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAccountCreate(account, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Account EndAccountCreate(System.IAsyncResult result) {
            return base.Channel.EndAccountCreate(result);
        }
        
        private System.IAsyncResult OnBeginAccountCreate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Account account = ((Nimble.Business.Library.Model.Framework.Security.Account)(inValues[0]));
            return this.BeginAccountCreate(account, callback, asyncState);
        }
        
        private object[] OnEndAccountCreate(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Account retVal = this.EndAccountCreate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAccountCreateCompleted(object state) {
            if ((this.AccountCreateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AccountCreateCompleted(this, new AccountCreateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AccountCreateAsync(Nimble.Business.Library.Model.Framework.Security.Account account) {
            this.AccountCreateAsync(account, null);
        }
        
        public void AccountCreateAsync(Nimble.Business.Library.Model.Framework.Security.Account account, object userState) {
            if ((this.onBeginAccountCreateDelegate == null)) {
                this.onBeginAccountCreateDelegate = new BeginOperationDelegate(this.OnBeginAccountCreate);
            }
            if ((this.onEndAccountCreateDelegate == null)) {
                this.onEndAccountCreateDelegate = new EndOperationDelegate(this.OnEndAccountCreate);
            }
            if ((this.onAccountCreateCompletedDelegate == null)) {
                this.onAccountCreateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAccountCreateCompleted);
            }
            base.InvokeAsync(this.onBeginAccountCreateDelegate, new object[] {
                        account}, this.onEndAccountCreateDelegate, this.onAccountCreateCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Account AccountRead(Nimble.Business.Library.Model.Framework.Security.Account account) {
            return base.Channel.AccountRead(account);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAccountRead(Nimble.Business.Library.Model.Framework.Security.Account account, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAccountRead(account, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Account EndAccountRead(System.IAsyncResult result) {
            return base.Channel.EndAccountRead(result);
        }
        
        private System.IAsyncResult OnBeginAccountRead(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Account account = ((Nimble.Business.Library.Model.Framework.Security.Account)(inValues[0]));
            return this.BeginAccountRead(account, callback, asyncState);
        }
        
        private object[] OnEndAccountRead(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Account retVal = this.EndAccountRead(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAccountReadCompleted(object state) {
            if ((this.AccountReadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AccountReadCompleted(this, new AccountReadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AccountReadAsync(Nimble.Business.Library.Model.Framework.Security.Account account) {
            this.AccountReadAsync(account, null);
        }
        
        public void AccountReadAsync(Nimble.Business.Library.Model.Framework.Security.Account account, object userState) {
            if ((this.onBeginAccountReadDelegate == null)) {
                this.onBeginAccountReadDelegate = new BeginOperationDelegate(this.OnBeginAccountRead);
            }
            if ((this.onEndAccountReadDelegate == null)) {
                this.onEndAccountReadDelegate = new EndOperationDelegate(this.OnEndAccountRead);
            }
            if ((this.onAccountReadCompletedDelegate == null)) {
                this.onAccountReadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAccountReadCompleted);
            }
            base.InvokeAsync(this.onBeginAccountReadDelegate, new object[] {
                        account}, this.onEndAccountReadDelegate, this.onAccountReadCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Account AccountUpdate(Nimble.Business.Library.Model.Framework.Security.Account account) {
            return base.Channel.AccountUpdate(account);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAccountUpdate(Nimble.Business.Library.Model.Framework.Security.Account account, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAccountUpdate(account, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Account EndAccountUpdate(System.IAsyncResult result) {
            return base.Channel.EndAccountUpdate(result);
        }
        
        private System.IAsyncResult OnBeginAccountUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Account account = ((Nimble.Business.Library.Model.Framework.Security.Account)(inValues[0]));
            return this.BeginAccountUpdate(account, callback, asyncState);
        }
        
        private object[] OnEndAccountUpdate(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Account retVal = this.EndAccountUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAccountUpdateCompleted(object state) {
            if ((this.AccountUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AccountUpdateCompleted(this, new AccountUpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AccountUpdateAsync(Nimble.Business.Library.Model.Framework.Security.Account account) {
            this.AccountUpdateAsync(account, null);
        }
        
        public void AccountUpdateAsync(Nimble.Business.Library.Model.Framework.Security.Account account, object userState) {
            if ((this.onBeginAccountUpdateDelegate == null)) {
                this.onBeginAccountUpdateDelegate = new BeginOperationDelegate(this.OnBeginAccountUpdate);
            }
            if ((this.onEndAccountUpdateDelegate == null)) {
                this.onEndAccountUpdateDelegate = new EndOperationDelegate(this.OnEndAccountUpdate);
            }
            if ((this.onAccountUpdateCompletedDelegate == null)) {
                this.onAccountUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAccountUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginAccountUpdateDelegate, new object[] {
                        account}, this.onEndAccountUpdateDelegate, this.onAccountUpdateCompletedDelegate, userState);
        }
        
        public bool AccountDelete(Nimble.Business.Library.Model.Framework.Security.Account account) {
            return base.Channel.AccountDelete(account);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAccountDelete(Nimble.Business.Library.Model.Framework.Security.Account account, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAccountDelete(account, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAccountDelete(System.IAsyncResult result) {
            return base.Channel.EndAccountDelete(result);
        }
        
        private System.IAsyncResult OnBeginAccountDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Account account = ((Nimble.Business.Library.Model.Framework.Security.Account)(inValues[0]));
            return this.BeginAccountDelete(account, callback, asyncState);
        }
        
        private object[] OnEndAccountDelete(System.IAsyncResult result) {
            bool retVal = this.EndAccountDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAccountDeleteCompleted(object state) {
            if ((this.AccountDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AccountDeleteCompleted(this, new AccountDeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AccountDeleteAsync(Nimble.Business.Library.Model.Framework.Security.Account account) {
            this.AccountDeleteAsync(account, null);
        }
        
        public void AccountDeleteAsync(Nimble.Business.Library.Model.Framework.Security.Account account, object userState) {
            if ((this.onBeginAccountDeleteDelegate == null)) {
                this.onBeginAccountDeleteDelegate = new BeginOperationDelegate(this.OnBeginAccountDelete);
            }
            if ((this.onEndAccountDeleteDelegate == null)) {
                this.onEndAccountDeleteDelegate = new EndOperationDelegate(this.OnEndAccountDelete);
            }
            if ((this.onAccountDeleteCompletedDelegate == null)) {
                this.onAccountDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAccountDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginAccountDeleteDelegate, new object[] {
                        account}, this.onEndAccountDeleteDelegate, this.onAccountDeleteCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Account> AccountSearch(Nimble.Business.Library.Model.Framework.Security.AccountPredicate accountPredicate) {
            return base.Channel.AccountSearch(accountPredicate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAccountSearch(Nimble.Business.Library.Model.Framework.Security.AccountPredicate accountPredicate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAccountSearch(accountPredicate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Account> EndAccountSearch(System.IAsyncResult result) {
            return base.Channel.EndAccountSearch(result);
        }
        
        private System.IAsyncResult OnBeginAccountSearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.AccountPredicate accountPredicate = ((Nimble.Business.Library.Model.Framework.Security.AccountPredicate)(inValues[0]));
            return this.BeginAccountSearch(accountPredicate, callback, asyncState);
        }
        
        private object[] OnEndAccountSearch(System.IAsyncResult result) {
            Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Account> retVal = this.EndAccountSearch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAccountSearchCompleted(object state) {
            if ((this.AccountSearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AccountSearchCompleted(this, new AccountSearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AccountSearchAsync(Nimble.Business.Library.Model.Framework.Security.AccountPredicate accountPredicate) {
            this.AccountSearchAsync(accountPredicate, null);
        }
        
        public void AccountSearchAsync(Nimble.Business.Library.Model.Framework.Security.AccountPredicate accountPredicate, object userState) {
            if ((this.onBeginAccountSearchDelegate == null)) {
                this.onBeginAccountSearchDelegate = new BeginOperationDelegate(this.OnBeginAccountSearch);
            }
            if ((this.onEndAccountSearchDelegate == null)) {
                this.onEndAccountSearchDelegate = new EndOperationDelegate(this.OnEndAccountSearch);
            }
            if ((this.onAccountSearchCompletedDelegate == null)) {
                this.onAccountSearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAccountSearchCompleted);
            }
            base.InvokeAsync(this.onBeginAccountSearchDelegate, new object[] {
                        accountPredicate}, this.onEndAccountSearchDelegate, this.onAccountSearchCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Permission PermissionCreate(Nimble.Business.Library.Model.Framework.Security.Permission permission) {
            return base.Channel.PermissionCreate(permission);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPermissionCreate(Nimble.Business.Library.Model.Framework.Security.Permission permission, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPermissionCreate(permission, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Permission EndPermissionCreate(System.IAsyncResult result) {
            return base.Channel.EndPermissionCreate(result);
        }
        
        private System.IAsyncResult OnBeginPermissionCreate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Permission permission = ((Nimble.Business.Library.Model.Framework.Security.Permission)(inValues[0]));
            return this.BeginPermissionCreate(permission, callback, asyncState);
        }
        
        private object[] OnEndPermissionCreate(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Permission retVal = this.EndPermissionCreate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPermissionCreateCompleted(object state) {
            if ((this.PermissionCreateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PermissionCreateCompleted(this, new PermissionCreateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PermissionCreateAsync(Nimble.Business.Library.Model.Framework.Security.Permission permission) {
            this.PermissionCreateAsync(permission, null);
        }
        
        public void PermissionCreateAsync(Nimble.Business.Library.Model.Framework.Security.Permission permission, object userState) {
            if ((this.onBeginPermissionCreateDelegate == null)) {
                this.onBeginPermissionCreateDelegate = new BeginOperationDelegate(this.OnBeginPermissionCreate);
            }
            if ((this.onEndPermissionCreateDelegate == null)) {
                this.onEndPermissionCreateDelegate = new EndOperationDelegate(this.OnEndPermissionCreate);
            }
            if ((this.onPermissionCreateCompletedDelegate == null)) {
                this.onPermissionCreateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPermissionCreateCompleted);
            }
            base.InvokeAsync(this.onBeginPermissionCreateDelegate, new object[] {
                        permission}, this.onEndPermissionCreateDelegate, this.onPermissionCreateCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Permission PermissionRead(Nimble.Business.Library.Model.Framework.Security.Permission permission) {
            return base.Channel.PermissionRead(permission);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPermissionRead(Nimble.Business.Library.Model.Framework.Security.Permission permission, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPermissionRead(permission, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Permission EndPermissionRead(System.IAsyncResult result) {
            return base.Channel.EndPermissionRead(result);
        }
        
        private System.IAsyncResult OnBeginPermissionRead(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Permission permission = ((Nimble.Business.Library.Model.Framework.Security.Permission)(inValues[0]));
            return this.BeginPermissionRead(permission, callback, asyncState);
        }
        
        private object[] OnEndPermissionRead(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Permission retVal = this.EndPermissionRead(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPermissionReadCompleted(object state) {
            if ((this.PermissionReadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PermissionReadCompleted(this, new PermissionReadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PermissionReadAsync(Nimble.Business.Library.Model.Framework.Security.Permission permission) {
            this.PermissionReadAsync(permission, null);
        }
        
        public void PermissionReadAsync(Nimble.Business.Library.Model.Framework.Security.Permission permission, object userState) {
            if ((this.onBeginPermissionReadDelegate == null)) {
                this.onBeginPermissionReadDelegate = new BeginOperationDelegate(this.OnBeginPermissionRead);
            }
            if ((this.onEndPermissionReadDelegate == null)) {
                this.onEndPermissionReadDelegate = new EndOperationDelegate(this.OnEndPermissionRead);
            }
            if ((this.onPermissionReadCompletedDelegate == null)) {
                this.onPermissionReadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPermissionReadCompleted);
            }
            base.InvokeAsync(this.onBeginPermissionReadDelegate, new object[] {
                        permission}, this.onEndPermissionReadDelegate, this.onPermissionReadCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Permission PermissionUpdate(Nimble.Business.Library.Model.Framework.Security.Permission permission) {
            return base.Channel.PermissionUpdate(permission);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPermissionUpdate(Nimble.Business.Library.Model.Framework.Security.Permission permission, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPermissionUpdate(permission, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Permission EndPermissionUpdate(System.IAsyncResult result) {
            return base.Channel.EndPermissionUpdate(result);
        }
        
        private System.IAsyncResult OnBeginPermissionUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Permission permission = ((Nimble.Business.Library.Model.Framework.Security.Permission)(inValues[0]));
            return this.BeginPermissionUpdate(permission, callback, asyncState);
        }
        
        private object[] OnEndPermissionUpdate(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Permission retVal = this.EndPermissionUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPermissionUpdateCompleted(object state) {
            if ((this.PermissionUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PermissionUpdateCompleted(this, new PermissionUpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PermissionUpdateAsync(Nimble.Business.Library.Model.Framework.Security.Permission permission) {
            this.PermissionUpdateAsync(permission, null);
        }
        
        public void PermissionUpdateAsync(Nimble.Business.Library.Model.Framework.Security.Permission permission, object userState) {
            if ((this.onBeginPermissionUpdateDelegate == null)) {
                this.onBeginPermissionUpdateDelegate = new BeginOperationDelegate(this.OnBeginPermissionUpdate);
            }
            if ((this.onEndPermissionUpdateDelegate == null)) {
                this.onEndPermissionUpdateDelegate = new EndOperationDelegate(this.OnEndPermissionUpdate);
            }
            if ((this.onPermissionUpdateCompletedDelegate == null)) {
                this.onPermissionUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPermissionUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginPermissionUpdateDelegate, new object[] {
                        permission}, this.onEndPermissionUpdateDelegate, this.onPermissionUpdateCompletedDelegate, userState);
        }
        
        public bool PermissionDelete(Nimble.Business.Library.Model.Framework.Security.Permission permission) {
            return base.Channel.PermissionDelete(permission);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPermissionDelete(Nimble.Business.Library.Model.Framework.Security.Permission permission, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPermissionDelete(permission, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndPermissionDelete(System.IAsyncResult result) {
            return base.Channel.EndPermissionDelete(result);
        }
        
        private System.IAsyncResult OnBeginPermissionDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Permission permission = ((Nimble.Business.Library.Model.Framework.Security.Permission)(inValues[0]));
            return this.BeginPermissionDelete(permission, callback, asyncState);
        }
        
        private object[] OnEndPermissionDelete(System.IAsyncResult result) {
            bool retVal = this.EndPermissionDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPermissionDeleteCompleted(object state) {
            if ((this.PermissionDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PermissionDeleteCompleted(this, new PermissionDeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PermissionDeleteAsync(Nimble.Business.Library.Model.Framework.Security.Permission permission) {
            this.PermissionDeleteAsync(permission, null);
        }
        
        public void PermissionDeleteAsync(Nimble.Business.Library.Model.Framework.Security.Permission permission, object userState) {
            if ((this.onBeginPermissionDeleteDelegate == null)) {
                this.onBeginPermissionDeleteDelegate = new BeginOperationDelegate(this.OnBeginPermissionDelete);
            }
            if ((this.onEndPermissionDeleteDelegate == null)) {
                this.onEndPermissionDeleteDelegate = new EndOperationDelegate(this.OnEndPermissionDelete);
            }
            if ((this.onPermissionDeleteCompletedDelegate == null)) {
                this.onPermissionDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPermissionDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginPermissionDeleteDelegate, new object[] {
                        permission}, this.onEndPermissionDeleteDelegate, this.onPermissionDeleteCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Permission> PermissionSearch(Nimble.Business.Library.Model.Framework.Security.PermissionPredicate permissionPredicate) {
            return base.Channel.PermissionSearch(permissionPredicate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPermissionSearch(Nimble.Business.Library.Model.Framework.Security.PermissionPredicate permissionPredicate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPermissionSearch(permissionPredicate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Permission> EndPermissionSearch(System.IAsyncResult result) {
            return base.Channel.EndPermissionSearch(result);
        }
        
        private System.IAsyncResult OnBeginPermissionSearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.PermissionPredicate permissionPredicate = ((Nimble.Business.Library.Model.Framework.Security.PermissionPredicate)(inValues[0]));
            return this.BeginPermissionSearch(permissionPredicate, callback, asyncState);
        }
        
        private object[] OnEndPermissionSearch(System.IAsyncResult result) {
            Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Permission> retVal = this.EndPermissionSearch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPermissionSearchCompleted(object state) {
            if ((this.PermissionSearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PermissionSearchCompleted(this, new PermissionSearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PermissionSearchAsync(Nimble.Business.Library.Model.Framework.Security.PermissionPredicate permissionPredicate) {
            this.PermissionSearchAsync(permissionPredicate, null);
        }
        
        public void PermissionSearchAsync(Nimble.Business.Library.Model.Framework.Security.PermissionPredicate permissionPredicate, object userState) {
            if ((this.onBeginPermissionSearchDelegate == null)) {
                this.onBeginPermissionSearchDelegate = new BeginOperationDelegate(this.OnBeginPermissionSearch);
            }
            if ((this.onEndPermissionSearchDelegate == null)) {
                this.onEndPermissionSearchDelegate = new EndOperationDelegate(this.OnEndPermissionSearch);
            }
            if ((this.onPermissionSearchCompletedDelegate == null)) {
                this.onPermissionSearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPermissionSearchCompleted);
            }
            base.InvokeAsync(this.onBeginPermissionSearchDelegate, new object[] {
                        permissionPredicate}, this.onEndPermissionSearchDelegate, this.onPermissionSearchCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Role RoleCreate(Nimble.Business.Library.Model.Framework.Security.Role role) {
            return base.Channel.RoleCreate(role);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRoleCreate(Nimble.Business.Library.Model.Framework.Security.Role role, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRoleCreate(role, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Role EndRoleCreate(System.IAsyncResult result) {
            return base.Channel.EndRoleCreate(result);
        }
        
        private System.IAsyncResult OnBeginRoleCreate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Role role = ((Nimble.Business.Library.Model.Framework.Security.Role)(inValues[0]));
            return this.BeginRoleCreate(role, callback, asyncState);
        }
        
        private object[] OnEndRoleCreate(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Role retVal = this.EndRoleCreate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRoleCreateCompleted(object state) {
            if ((this.RoleCreateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RoleCreateCompleted(this, new RoleCreateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RoleCreateAsync(Nimble.Business.Library.Model.Framework.Security.Role role) {
            this.RoleCreateAsync(role, null);
        }
        
        public void RoleCreateAsync(Nimble.Business.Library.Model.Framework.Security.Role role, object userState) {
            if ((this.onBeginRoleCreateDelegate == null)) {
                this.onBeginRoleCreateDelegate = new BeginOperationDelegate(this.OnBeginRoleCreate);
            }
            if ((this.onEndRoleCreateDelegate == null)) {
                this.onEndRoleCreateDelegate = new EndOperationDelegate(this.OnEndRoleCreate);
            }
            if ((this.onRoleCreateCompletedDelegate == null)) {
                this.onRoleCreateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRoleCreateCompleted);
            }
            base.InvokeAsync(this.onBeginRoleCreateDelegate, new object[] {
                        role}, this.onEndRoleCreateDelegate, this.onRoleCreateCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Role RoleRead(Nimble.Business.Library.Model.Framework.Security.Role role) {
            return base.Channel.RoleRead(role);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRoleRead(Nimble.Business.Library.Model.Framework.Security.Role role, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRoleRead(role, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Role EndRoleRead(System.IAsyncResult result) {
            return base.Channel.EndRoleRead(result);
        }
        
        private System.IAsyncResult OnBeginRoleRead(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Role role = ((Nimble.Business.Library.Model.Framework.Security.Role)(inValues[0]));
            return this.BeginRoleRead(role, callback, asyncState);
        }
        
        private object[] OnEndRoleRead(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Role retVal = this.EndRoleRead(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRoleReadCompleted(object state) {
            if ((this.RoleReadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RoleReadCompleted(this, new RoleReadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RoleReadAsync(Nimble.Business.Library.Model.Framework.Security.Role role) {
            this.RoleReadAsync(role, null);
        }
        
        public void RoleReadAsync(Nimble.Business.Library.Model.Framework.Security.Role role, object userState) {
            if ((this.onBeginRoleReadDelegate == null)) {
                this.onBeginRoleReadDelegate = new BeginOperationDelegate(this.OnBeginRoleRead);
            }
            if ((this.onEndRoleReadDelegate == null)) {
                this.onEndRoleReadDelegate = new EndOperationDelegate(this.OnEndRoleRead);
            }
            if ((this.onRoleReadCompletedDelegate == null)) {
                this.onRoleReadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRoleReadCompleted);
            }
            base.InvokeAsync(this.onBeginRoleReadDelegate, new object[] {
                        role}, this.onEndRoleReadDelegate, this.onRoleReadCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Role RoleUpdate(Nimble.Business.Library.Model.Framework.Security.Role role) {
            return base.Channel.RoleUpdate(role);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRoleUpdate(Nimble.Business.Library.Model.Framework.Security.Role role, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRoleUpdate(role, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Role EndRoleUpdate(System.IAsyncResult result) {
            return base.Channel.EndRoleUpdate(result);
        }
        
        private System.IAsyncResult OnBeginRoleUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Role role = ((Nimble.Business.Library.Model.Framework.Security.Role)(inValues[0]));
            return this.BeginRoleUpdate(role, callback, asyncState);
        }
        
        private object[] OnEndRoleUpdate(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Role retVal = this.EndRoleUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRoleUpdateCompleted(object state) {
            if ((this.RoleUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RoleUpdateCompleted(this, new RoleUpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RoleUpdateAsync(Nimble.Business.Library.Model.Framework.Security.Role role) {
            this.RoleUpdateAsync(role, null);
        }
        
        public void RoleUpdateAsync(Nimble.Business.Library.Model.Framework.Security.Role role, object userState) {
            if ((this.onBeginRoleUpdateDelegate == null)) {
                this.onBeginRoleUpdateDelegate = new BeginOperationDelegate(this.OnBeginRoleUpdate);
            }
            if ((this.onEndRoleUpdateDelegate == null)) {
                this.onEndRoleUpdateDelegate = new EndOperationDelegate(this.OnEndRoleUpdate);
            }
            if ((this.onRoleUpdateCompletedDelegate == null)) {
                this.onRoleUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRoleUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginRoleUpdateDelegate, new object[] {
                        role}, this.onEndRoleUpdateDelegate, this.onRoleUpdateCompletedDelegate, userState);
        }
        
        public bool RoleDelete(Nimble.Business.Library.Model.Framework.Security.Role role) {
            return base.Channel.RoleDelete(role);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRoleDelete(Nimble.Business.Library.Model.Framework.Security.Role role, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRoleDelete(role, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndRoleDelete(System.IAsyncResult result) {
            return base.Channel.EndRoleDelete(result);
        }
        
        private System.IAsyncResult OnBeginRoleDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Role role = ((Nimble.Business.Library.Model.Framework.Security.Role)(inValues[0]));
            return this.BeginRoleDelete(role, callback, asyncState);
        }
        
        private object[] OnEndRoleDelete(System.IAsyncResult result) {
            bool retVal = this.EndRoleDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRoleDeleteCompleted(object state) {
            if ((this.RoleDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RoleDeleteCompleted(this, new RoleDeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RoleDeleteAsync(Nimble.Business.Library.Model.Framework.Security.Role role) {
            this.RoleDeleteAsync(role, null);
        }
        
        public void RoleDeleteAsync(Nimble.Business.Library.Model.Framework.Security.Role role, object userState) {
            if ((this.onBeginRoleDeleteDelegate == null)) {
                this.onBeginRoleDeleteDelegate = new BeginOperationDelegate(this.OnBeginRoleDelete);
            }
            if ((this.onEndRoleDeleteDelegate == null)) {
                this.onEndRoleDeleteDelegate = new EndOperationDelegate(this.OnEndRoleDelete);
            }
            if ((this.onRoleDeleteCompletedDelegate == null)) {
                this.onRoleDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRoleDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginRoleDeleteDelegate, new object[] {
                        role}, this.onEndRoleDeleteDelegate, this.onRoleDeleteCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Role> RoleSearch(Nimble.Business.Library.Model.Framework.Security.RolePredicate rolePredicate) {
            return base.Channel.RoleSearch(rolePredicate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRoleSearch(Nimble.Business.Library.Model.Framework.Security.RolePredicate rolePredicate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRoleSearch(rolePredicate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Role> EndRoleSearch(System.IAsyncResult result) {
            return base.Channel.EndRoleSearch(result);
        }
        
        private System.IAsyncResult OnBeginRoleSearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.RolePredicate rolePredicate = ((Nimble.Business.Library.Model.Framework.Security.RolePredicate)(inValues[0]));
            return this.BeginRoleSearch(rolePredicate, callback, asyncState);
        }
        
        private object[] OnEndRoleSearch(System.IAsyncResult result) {
            Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Role> retVal = this.EndRoleSearch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRoleSearchCompleted(object state) {
            if ((this.RoleSearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RoleSearchCompleted(this, new RoleSearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RoleSearchAsync(Nimble.Business.Library.Model.Framework.Security.RolePredicate rolePredicate) {
            this.RoleSearchAsync(rolePredicate, null);
        }
        
        public void RoleSearchAsync(Nimble.Business.Library.Model.Framework.Security.RolePredicate rolePredicate, object userState) {
            if ((this.onBeginRoleSearchDelegate == null)) {
                this.onBeginRoleSearchDelegate = new BeginOperationDelegate(this.OnBeginRoleSearch);
            }
            if ((this.onEndRoleSearchDelegate == null)) {
                this.onEndRoleSearchDelegate = new EndOperationDelegate(this.OnEndRoleSearch);
            }
            if ((this.onRoleSearchCompletedDelegate == null)) {
                this.onRoleSearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRoleSearchCompleted);
            }
            base.InvokeAsync(this.onBeginRoleSearchDelegate, new object[] {
                        rolePredicate}, this.onEndRoleSearchDelegate, this.onRoleSearchCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Log LogCreate(Nimble.Business.Library.Model.Framework.Security.Log log) {
            return base.Channel.LogCreate(log);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogCreate(Nimble.Business.Library.Model.Framework.Security.Log log, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogCreate(log, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Log EndLogCreate(System.IAsyncResult result) {
            return base.Channel.EndLogCreate(result);
        }
        
        private System.IAsyncResult OnBeginLogCreate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Log log = ((Nimble.Business.Library.Model.Framework.Security.Log)(inValues[0]));
            return this.BeginLogCreate(log, callback, asyncState);
        }
        
        private object[] OnEndLogCreate(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Log retVal = this.EndLogCreate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLogCreateCompleted(object state) {
            if ((this.LogCreateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogCreateCompleted(this, new LogCreateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogCreateAsync(Nimble.Business.Library.Model.Framework.Security.Log log) {
            this.LogCreateAsync(log, null);
        }
        
        public void LogCreateAsync(Nimble.Business.Library.Model.Framework.Security.Log log, object userState) {
            if ((this.onBeginLogCreateDelegate == null)) {
                this.onBeginLogCreateDelegate = new BeginOperationDelegate(this.OnBeginLogCreate);
            }
            if ((this.onEndLogCreateDelegate == null)) {
                this.onEndLogCreateDelegate = new EndOperationDelegate(this.OnEndLogCreate);
            }
            if ((this.onLogCreateCompletedDelegate == null)) {
                this.onLogCreateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogCreateCompleted);
            }
            base.InvokeAsync(this.onBeginLogCreateDelegate, new object[] {
                        log}, this.onEndLogCreateDelegate, this.onLogCreateCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.Model.Framework.Security.Log LogRead(Nimble.Business.Library.Model.Framework.Security.Log log) {
            return base.Channel.LogRead(log);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogRead(Nimble.Business.Library.Model.Framework.Security.Log log, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogRead(log, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.Model.Framework.Security.Log EndLogRead(System.IAsyncResult result) {
            return base.Channel.EndLogRead(result);
        }
        
        private System.IAsyncResult OnBeginLogRead(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.Log log = ((Nimble.Business.Library.Model.Framework.Security.Log)(inValues[0]));
            return this.BeginLogRead(log, callback, asyncState);
        }
        
        private object[] OnEndLogRead(System.IAsyncResult result) {
            Nimble.Business.Library.Model.Framework.Security.Log retVal = this.EndLogRead(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLogReadCompleted(object state) {
            if ((this.LogReadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogReadCompleted(this, new LogReadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogReadAsync(Nimble.Business.Library.Model.Framework.Security.Log log) {
            this.LogReadAsync(log, null);
        }
        
        public void LogReadAsync(Nimble.Business.Library.Model.Framework.Security.Log log, object userState) {
            if ((this.onBeginLogReadDelegate == null)) {
                this.onBeginLogReadDelegate = new BeginOperationDelegate(this.OnBeginLogRead);
            }
            if ((this.onEndLogReadDelegate == null)) {
                this.onEndLogReadDelegate = new EndOperationDelegate(this.OnEndLogRead);
            }
            if ((this.onLogReadCompletedDelegate == null)) {
                this.onLogReadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogReadCompleted);
            }
            base.InvokeAsync(this.onBeginLogReadDelegate, new object[] {
                        log}, this.onEndLogReadDelegate, this.onLogReadCompletedDelegate, userState);
        }
        
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Log> LogSearch(Nimble.Business.Library.Model.Framework.Security.LogPredicate logPredicate) {
            return base.Channel.LogSearch(logPredicate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogSearch(Nimble.Business.Library.Model.Framework.Security.LogPredicate logPredicate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogSearch(logPredicate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Log> EndLogSearch(System.IAsyncResult result) {
            return base.Channel.EndLogSearch(result);
        }
        
        private System.IAsyncResult OnBeginLogSearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Nimble.Business.Library.Model.Framework.Security.LogPredicate logPredicate = ((Nimble.Business.Library.Model.Framework.Security.LogPredicate)(inValues[0]));
            return this.BeginLogSearch(logPredicate, callback, asyncState);
        }
        
        private object[] OnEndLogSearch(System.IAsyncResult result) {
            Nimble.Business.Library.DataAccess.GenericOutput<Nimble.Business.Library.Model.Framework.Security.Log> retVal = this.EndLogSearch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLogSearchCompleted(object state) {
            if ((this.LogSearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogSearchCompleted(this, new LogSearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogSearchAsync(Nimble.Business.Library.Model.Framework.Security.LogPredicate logPredicate) {
            this.LogSearchAsync(logPredicate, null);
        }
        
        public void LogSearchAsync(Nimble.Business.Library.Model.Framework.Security.LogPredicate logPredicate, object userState) {
            if ((this.onBeginLogSearchDelegate == null)) {
                this.onBeginLogSearchDelegate = new BeginOperationDelegate(this.OnBeginLogSearch);
            }
            if ((this.onEndLogSearchDelegate == null)) {
                this.onEndLogSearchDelegate = new EndOperationDelegate(this.OnEndLogSearch);
            }
            if ((this.onLogSearchCompletedDelegate == null)) {
                this.onLogSearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogSearchCompleted);
            }
            base.InvokeAsync(this.onBeginLogSearchDelegate, new object[] {
                        logPredicate}, this.onEndLogSearchDelegate, this.onLogSearchCompletedDelegate, userState);
        }
    }
}
