<?xml version="1.0" encoding="utf-8"?>
<configuration>

    <configSections>
        <section name="database.constraints" type="Nimble.Business.Engine.Core.DatabaseConstraintConfiguration"/>
    </configSections>

    <startup>
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1"/>
    </startup>

    <appSettings>
        <!--
            WCF
            Maps connection string name to connection string attribute name of template database.
        -->
        <add key="GenericDatabase" value="Nimble"/>
        <!--
            WCF
            Maps connection string name to connection string attribute name of geolocation database.
        -->
        <add key="GeolocationDatabase" value="MaxMind"/>
        <!--
            WCF
            Used to indicate folder pattern where backups of database can be stored.
            WARNING: be sure that sql user has access to backup databases and 
            read/write access into folder specified above.
        -->
        <add key="DatabaseBackupsFolderPattern" value=""/>
        <!--
            WCF
            Specifies database command timeout.
        -->
        <add key="DatabaseCommandTimeout" value="600"/>
        <!--
            WCF
            Specifies transaction scope timeout.
        -->
        <add key="TransactionScopeTimeout" value="00:30:00"/>
        <!--
            WCF
            Specifies transaction lock timeout.
        -->
        <add key="TransactionLockTimeout" value="00:00:30"/>
        <!--
            WCF
            Specifies transaction lock delay (in milliseconds).
        -->
        <add key="TransactionLockDelay" value="1000"/>
        <!-- 
            WCF
            If databases specified in connection strings do not exist, on first start of services 
            creates and restores databases from backup at filename indicated in value tags.
            WARNING: be sure that sql user has access to create databases and user under which service 
            runs has access to filename. Key tag and database name must be the same - service will create 
            databases at default path.
        -->
        <add key="Nimble" value="C:\Programs\Nimble\Nimble.Binaries\Database.Backups\Nimble.bak"/>
        <!--
            WCF/WA
            Specifies event log source.
        -->
        <add key="EventLogSource" value="Nimble.WebAdministration"/>
        <!--
            WCF/WA
            Specifies event log name.
        -->
        <add key="EventLogName" value="Nimble"/>
        <!--
            WCF
            On "true" service will try to restore databases even if they exists.
            WARNING: restore will fail if service has not exclusive access on databases.
        -->
        <add key="ForceRestoringDatabases" value="false"/>
        <!--
            WCF/WA
            List of business object which will be stored in cache to avoid frequent databases requests.
            WARNING: if records in databases are changed not through service then objects do not refresh.
        -->
        <add key="CachedEntityTypeNames" value="Culture; Resource; Translation"/>
        <!--
            WCF/WA
            On "true" use translation functionality for string, otherwise - do not translate.
        -->
        <add key="UseTranslationModule" value="true"/>
        <!--
            WCF/WA
            Indicates with how many days latency to update last used date of strings for translation management.
        -->
        <add key="ResourceLastUsedLatencyDays" value="10"/>
        <!--
            WCF
            On first start of services creates an culture with code as value tag and name as specified below
            if does not exists.
            WARNING: to create culture, code and name must be declared both.
        -->
        <add key="CultureCode" value="en"/>
        <!--
            WCF/WA
            WCF - on first start of services used for create an culture with name as value tag and code as 
                  specified above if does not exists;
            WA  - indicates default culture used in sources for accessing google translate service
                  in translation management.
        -->
        <add key="CultureName" value="English"/>
        <!--
            WCF
            On first start of services assigns culture specified above to emplacement specified below.
        -->
        <add key="DefineEmplacementCulture" value="true"/>
        <!--
            WCF
            On first start of services assigns culture specified above to account specified below.
        -->
        <add key="DefineAccountCulture" value="false"/>
        <!--
            WCF
            Indicates latency to update last used date of account for security management.
        -->
        <add key="AccountLastUsedLatency" value="00:30:00"/>
        <!--
            WCF
            On "true" at first start of services copies all not existing translation elements 
            (cultures, strings, translations) at specified above emplacement and application from database.
        -->
        <add key="MultilanguageCopy" value="false"/>
        <!--
            WCF/WA
            On "true" load all multilanguage objects in cache on first start to avoid frequent database/services requests.
            WARNING: on remote WCF services through loose coupling set "true" to avoid big traffic 
            provided by many SOAP messages.
        -->
        <add key="MultilanguageCacheOnLoad" value="true"/>
        <!--
            WCF
            Indicates context type for session (Win, WCF, Web).
            WARNING: on "Win" or "Web" emplacement and application code must be defined below.
        -->
        <add key="SessionContextType" value="Wcf"/>
        <!--
            WCF
            On true enable token context without GenericDatabase.
        -->
        <add key="UseProcessToken" value="false"/>
        <!--
            WCF
            Timeout for WCF inactive sessions.
            WARNING: ussually must be greater than timeout of consuming application.
        -->
        <add key="SessionInactivityTimeout" value="00:30:00"/>
        <!--
            WCF/WA
            WCF - on first start of services creates an emplacement with name as value tag if does not exists and
                  indicates default emplacement used for translation in web context;
            WA  - included in message header on every client requests to identify at which node from
                  distributed data warehouse belongs.
        -->
        <add key="EmplacementCode" value="Nimble.Central"/>
        <!--
            WCF
            On first start of services updates administrative flag of specified above emplacement.
            WARNING: on "true" management will extend over all objects, on "false" - just only objects 
                     belonging specified emplacement.
        -->
        <add key="EmplacementIsAdministrative" value="true"/>
        <!--
            WCF
            On first start of services creates an user/password at specified above emplacement.
        -->
        <add key="UserCode" value="sa"/>
        <add key="UserPassword" value="1"/>
        <!--
            WCF/WA
            WCF - on first start of services creates an application with name as value tag if does not exists and
                  indicates default application used for translation in web context;
            WA  - included in message header on every client requests to identify application used.
        -->
        <add key="ApplicationCode" value="Nimble.WebOperational"/>
        <!--
            WCF
            On first start of services updates administrative flag of specified above application.
            WARNING: on "true" management will extend over all objects, on "false" - just only objects 
                     belonging specified application.
        -->
        <add key="ApplicationIsAdministrative" value="true"/>
        <!--
            WCF
            On first start of services creates an role with name as value tag at specified above 
            emplacement and application, assigns it to user of application specified above and 
            assigns all existed or updated permissions to it.
        -->
        <add key="RoleCode" value="Administrators"/>
        <!--
            WCF
            On "true" at first start of services updates permissions entries,
            according with associated enumerator at application specified above
            (on "false" or disabling this tag will increase services start 
            if no need on creation/modification object at first start).
        -->
        <add key="UpdatePermissions" value="false"/>
        <!--
            WCF
            On "true" at first start of services updates permissions entries,
            according with employee actor type enumerator at application specified above
            (on "false" will increase services start if no need
            on creation/modification object at first start).
            WARNING: for assigning new permissions to actor roles, [UpdatePermissions] tag must be enabled.
        -->
        <add key="UpdateEmployeeActorTypeRoles" value="false"/>
        <!--
            WA
            Indicates state type for storing data on IIS pages (Session, View, Control) as:
            0 - 0
            1 - Session
            2 - View
            3 - Session, View
            4 - Control
            5 - Session, Control
            6 - View, Control
            7 - Session, View, Control
        -->
        <add key="IisStateType" value="1"/>
        <!--
            WA
            On "true" IIS marks page with tags that deny browser cache.
        -->
        <add key="DenyBrowserPageCache" value="true"/>
        <!--
            WA
            On "true" log page visits of authenticated users (user, application, page, IP-address).
        -->
        <add key="LogPageVisits" value="false"/>
        <!--
            WA
            Used to date representation.
        -->
        <add key="DateFormat" value="dd/MM/yyyy"/>
        <!--
            WA
            Used to mask date input.
        -->
        <add key="DateMask" value="99/99/9999"/>
        <!--
            WCF/WA
            On "true" IP info is stored with geolocation details (see http://www.maxmind.com/).
            WARNING: for big geolocation data getting IP info can troubleshoot performance.
        -->
        <add key="StoreIpInfo" value="false"/>
        <!--
            WCF/WA
            Used for sending mail.
        -->
        <add key="SmtpHost" value="smtp.mail.ru"/>
        <add key="SmtpPort" value="25"/>
        <add key="SmtpUserName" value="dujacorneliu@mail.ru"/>
        <add key="SmtpPassword" value="2009"/>
        <add key="SmtpFailedTimeout" value="5000"/>
        <!--
            WCF
            Used for minimal date value.
        -->
        <add key="MinDate" value="1800-01-01 00:00:00.000"/>
        <!--
            WCF
            Used for maximal date value.
        -->
        <add key="MaxDate" value="2200-12-31 23:59:59.997"/>
        <!--
            WA
            Used to overwrite WCF services host.
            WARNING: does not work for ServiceModel endpoints explicitly defined in ~.config.
        -->
        <add key="ServiceHost" value="http://localhost/Nimble.Server.Iis/"/>
    </appSettings>

    <runtime>
        <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
            <dependentAssembly>
                <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral"/>
                <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0"/>
            </dependentAssembly>
        </assemblyBinding>
    </runtime>

    <connectionStrings>
        <add name="Nimble" connectionString="Data Source=EN30327\MSSQL2008E;Initial Catalog=Nimble;Persist Security Info=True;User ID=sa;Password=CSD/990407/;Max Pool Size=100;Min Pool Size=1;" providerName="System.Data.SqlClient"/>
        <!--<add name="Nimble" connectionString="Data Source=CSD\MSSQL2008E;Initial Catalog=Nimble;Persist Security Info=True;User ID=sa;Password=2004;Max Pool Size=100;Min Pool Size=1;" providerName="System.Data.SqlClient"/>-->
        <add name="MaxMind" connectionString="Data Source=EN30327\MSSQL2008E;Initial Catalog=MaxMind;Persist Security Info=True;User ID=sa;Password=CSD/990407/;Max Pool Size=100;Min Pool Size=1;" providerName="System.Data.SqlClient"/>
    </connectionStrings>

    <system.serviceModel>
        <bindings>
            <basicHttpBinding>
                <binding
                    name="httpBinding"
                    closeTimeout="01:00:00"
                    openTimeout="01:00:00"
                    receiveTimeout="01:00:00"
                    sendTimeout="01:00:00"
                    bypassProxyOnLocal="false"
                    hostNameComparisonMode="StrongWildcard"
                    maxBufferSize="2147483647"
                    maxBufferPoolSize="524288"
                    maxReceivedMessageSize="2147483647"
                    messageEncoding="Text"
                    textEncoding="utf-8"
                    transferMode="Buffered"
                    useDefaultWebProxy="true"
                    allowCookies="false">
                    <readerQuotas
                        maxDepth="32"
                        maxStringContentLength="2147483647"
                        maxArrayLength="2147483647"
                        maxBytesPerRead="4096"
                        maxNameTableCharCount="16384"/>
                    <security mode="None">
                        <transport
                            clientCredentialType="None"
                            proxyCredentialType="None"
                            realm=""/>
                        <message
                            algorithmSuite="Default"
                            clientCredentialType="UserName"/>
                    </security>
                </binding>
            </basicHttpBinding>
        </bindings>
        <client>
            <endpoint
                address="http://localhost/Nimble.Server.Iis/Framework/Common.svc"
                binding="basicHttpBinding"
                bindingConfiguration="httpBinding"
                contract="Common.ICommon"
                name="HttpBinding_ICommon"
                behaviorConfiguration="behaviorConfigurationEndpoint">
                <identity>
                    <dns value="localhost"/>
                </identity>
            </endpoint>
            <endpoint
                address="http://localhost/Nimble.Server.Iis/Framework/Security.svc"
                binding="basicHttpBinding"
                bindingConfiguration="httpBinding"
                contract="Security.ISecurity"
                name="HttpBinding_ISecurity"
                behaviorConfiguration="behaviorConfigurationEndpoint">
                <identity>
                    <dns value="localhost"/>
                </identity>
            </endpoint>
            <endpoint
                address="http://localhost/Nimble.Server.Iis/Framework/Multilanguage.svc"
                binding="basicHttpBinding"
                bindingConfiguration="httpBinding"
                contract="Multilanguage.IMultilanguage"
                name="HttpBinding_IMultilanguage"
                behaviorConfiguration="behaviorConfigurationEndpoint">
                <identity>
                    <dns value="localhost"/>
                </identity>
            </endpoint>
            <endpoint
                address="http://localhost/Nimble.Server.Iis/Framework/Maintenance.svc"
                binding="basicHttpBinding"
                bindingConfiguration="httpBinding"
                contract="Maintenance.IMaintenance"
                name="HttpBinding_IMaintenance"
                behaviorConfiguration="behaviorConfigurationEndpoint">
                <identity>
                    <dns value="localhost"/>
                </identity>
            </endpoint>
            <endpoint
                address="http://localhost/Nimble.Server.Iis/Framework/Geolocation.svc"
                binding="basicHttpBinding"
                bindingConfiguration="httpBinding"
                contract="Geolocation.IGeolocation"
                name="HttpBinding_IGeolocation"
                behaviorConfiguration="behaviorConfigurationEndpoint">
                <identity>
                    <dns value="localhost"/>
                </identity>
            </endpoint>
            <endpoint
                address="http://localhost/Nimble.Server.Iis/Framework/Owner.svc"
                binding="basicHttpBinding"
                bindingConfiguration="httpBinding"
                contract="Owner.IOwner"
                name="HttpBinding_IOwner"
                behaviorConfiguration="behaviorConfigurationEndpoint">
                <identity>
                    <dns value="localhost"/>
                </identity>
            </endpoint>
        </client>
        <behaviors>
            <endpointBehaviors>
                <behavior name="behaviorConfigurationEndpoint">
                    <dataContractSerializer maxItemsInObjectGraph="2147483647"/>
                </behavior>
            </endpointBehaviors>
        </behaviors>
    </system.serviceModel>

    <location path="Login.aspx">
        <system.web>
            <authorization>
                <allow users="*"/>
            </authorization>
        </system.web>
    </location>

    <location path="Default.aspx">
        <system.web>
            <authorization>
                <allow users="*"/>
            </authorization>
        </system.web>
    </location>

    <database.constraints>

      <!--GenericDatabase-->

      <!--Common-->
      <!--Preset-->
      <add key="UK_Preset_AccountId_PresetEntityType_Code"
           primary="Preset"
           foreign=""
           insert="Preset code must be unique for selected account and preset entity type."
           update="Preset code must be unique for selected account and preset entity type."
           delete=""/>
      <add key="UI_Presets_AccountId_PresetEntityType_IsDefault"
           primary="Preset"
           foreign=""
           insert="Preset default status can be only one for selected account and preset entity type."
           update="Preset default status can be only one for selected account and preset entity type."
           delete=""/>
      <!--Split-->
      <add key="UK_Split_EmplacementId_SplitType_Code"
           primary="Split"
           foreign=""
           insert="Split code must be unique for selected emplacement and split type."
           update="Split code must be unique for selected emplacement and split type."
           delete=""/>
      <add key="FK_Group_Split"
           primary="Split"
           foreign="Group"
           insert="Split not valid or does not exist and cannot be assigned to group(s)."
           update="Split not valid or does not exist and cannot be assigned to group(s)."
           delete="Split is assigned to group(s) and cannot be deleted."/>
      <!--Group-->
      <add key="UK_Group_SplitId_Code"
           primary="Group"
           foreign=""
           insert="Group code must be unique for selected emplacement."
           update="Group code must be unique for selected emplacement."
           delete=""/>
      <!--Hierarchy-->
      <add key="UK_Hierarchy_EntityId"
           primary="Hierarchy"
           foreign=""
           insert="Hierarchy entity identifier must be unique."
           update="Hierarchy entity identifier must be unique."
           delete=""/>
      <add key="CK_Hierarchy_Left_Right"
           primary="Hierarchy"
           foreign=""
           insert="Hierarchy left value must be less than hierarchy right value."
           update="Hierarchy left value must be less than hierarchy right value."
           delete=""/>
      <!--Batch-->
      <add key="FK_Operation_Batch"
           primary="Batch"
           foreign="Operation"
           insert="Batch not valid or does not exist and cannot be assigned to operation(s)."
           update="Batch not valid or does not exist and cannot be assigned to operation(s)."
           delete="Batch is assigned to operation(s) and cannot be deleted."/>
      <!--Operation-->
      <add key="UK_Operation_BatchId_Code"
           primary="Operation"
           foreign=""
           insert="Operation code must be unique for selected batch."
           update="Operation code must be unique for selected batch."
           delete=""/>

      <!--Security-->
      <!--Emplacement-->
      <add key="UK_Emplacement_Code"
           primary="Emplacement"
           foreign=""
           insert="Emplacement code must be unique."
           update="Emplacement code must be unique."
           delete=""/>
      <add key="FK_Culture_Emplacement"
           primary="Emplacement"
           foreign="Culture"
           insert="Emplacement not valid or does not exist and cannot be assigned to culture(s)."
           update="Emplacement not valid or does not exist and cannot be assigned to culture(s)."
           delete="Emplacement is assigned to culture(s) and cannot be deleted."/>
      <add key="FK_Resource_Emplacement"
           primary="Emplacement"
           foreign="Resource"
           insert="Emplacement not valid or does not exist and cannot be assigned to resource(s)."
           update="Emplacement not valid or does not exist and cannot be assigned to resource(s)."
           delete="Emplacement is assigned to resource(s) and cannot be deleted."/>
      <add key="FK_User_Emplacement"
           primary="Emplacement"
           foreign="Resource"
           insert="Emplacement not valid or does not exist and cannot be assigned to user(s)."
           update="Emplacement not valid or does not exist and cannot be assigned to user(s)."
           delete="Emplacement is assigned to user(s) and cannot be deleted."/>
      <add key="FK_Role_Emplacement"
           primary="Emplacement"
           foreign="Resource"
           insert="Emplacement not valid or does not exist and cannot be assigned to role(s)."
           update="Emplacement not valid or does not exist and cannot be assigned to role(s)."
           delete="Emplacement is assigned to role(s) and cannot be deleted."/>
      <add key="FK_Split_Emplacement"
           primary="Emplacement"
           foreign="Split"
           insert="Emplacement not valid or does not exist and cannot be assigned to split(s)."
           update="Emplacement not valid or does not exist and cannot be assigned to split(s)."
           delete="Emplacement is assigned to split(s) and cannot be deleted."/>
      <add key="FK_Person_Emplacement"
           primary="Emplacement"
           foreign="Person"
           insert="Emplacement not valid or does not exist and cannot be assigned to person(s)."
           update="Emplacement not valid or does not exist and cannot be assigned to person(s)."
           delete="Emplacement is assigned to person(s) and cannot be deleted."/>
      <add key="FK_Organisation_Emplacement"
           primary="Emplacement"
           foreign="Person"
           insert="Emplacement not valid or does not exist and cannot be assigned to organisation(s)."
           update="Emplacement not valid or does not exist and cannot be assigned to organisation(s)."
           delete="Emplacement is assigned to organisation(s) and cannot be deleted."/>
      <!--Application-->
      <add key="UK_Application_Code"
           primary="Application"
           foreign=""
           insert="Application code must be unique."
           update="Application code must be unique."
           delete=""/>
      <add key="FK_Resource_Application"
           primary="Application"
           foreign="Resource"
           insert="Application not valid or does not exist and cannot be assigned to resource(s)."
           update="Application not valid or does not exist and cannot be assigned to resource(s)."
           delete="Application is assigned to resource(s) and cannot be deleted."/>
      <add key="FK_Account_Application"
           primary="Application"
           foreign="Account"
           insert="Application not valid or does not exist and cannot be assigned to account(s)."
           update="Application not valid or does not exist and cannot be assigned to account(s)."
           delete="Application is assigned to account(s) and cannot be deleted."/>
      <add key="FK_Permission_Application"
           primary="Application"
           foreign="Permission"
           insert="Application not valid or does not exist and cannot be assigned to permission(s)."
           update="Application not valid or does not exist and cannot be assigned to permission(s)."
           delete="Application is assigned to permission(s) and cannot be deleted."/>
      <add key="FK_Role_Application"
           primary="Application"
           foreign="Role"
           insert="Application not valid or does not exist and cannot be assigned to role(s)."
           update="Application not valid or does not exist and cannot be assigned to role(s)."
           delete="Application is assigned to role(s) and cannot be deleted."/>
      <add key="FK_Log_Application"
           primary="Application"
           foreign="Log"
           insert="Application not valid or does not exist and cannot be assigned to log(s)."
           update="Application not valid or does not exist and cannot be assigned to log(s)."
           delete="Application is assigned to log(s) and cannot be deleted."/>
      <!--User-->
      <add key="UK_User_EmplacementId_Code"
           primary="User"
           foreign=""
           insert="User code must be unique for selected emplacement."
           update="User code must be unique for selected emplacement."
           delete=""/>
      <add key="FK_Account_User"
           primary="User"
           foreign="Account"
           insert="User not valid or does not exist and cannot be assigned to account(s)."
           update="User not valid or does not exist and cannot be assigned to account(s)."
           delete="User is assigned to account(s) and cannot be deleted."/>
      <add key="FK_Person_User"
           primary="User"
           foreign="Person"
           insert="User not valid or does not exist and cannot be assigned to person."
           update="User not valid or does not exist and cannot be assigned to person."
           delete="User is assigned to person and cannot be deleted."/>
      <!--Account-->
      <add key="UK_Account_UserId_ApplicationId"
           primary="Account"
           foreign=""
           insert="User must be unique for selected application."
           update="User must be unique for selected application."
           delete=""/>
      <add key="FK_AccountRole_Account"
           primary="Account"
           foreign="AccountRole"
           insert="Account not valid or does not exist and cannot be assigned to role(s)."
           update="Account not valid or does not exist and cannot be assigned to role(s)."
           delete="Account has assigned role(s) and cannot be deleted."/>
      <add key="FK_Log_Account"
           primary="Account"
           foreign="Log"
           insert="Account not valid or does not exist and cannot be assigned to log(s)."
           update="Account not valid or does not exist and cannot be assigned to log(s)."
           delete="Account has assigned log(s) and cannot be deleted."/>
      <add key="FK_Preset_Account"
           primary="Account"
           foreign="Preset"
           insert="Account not valid or does not exist and cannot be assigned to preset(s)."
           update="Account not valid or does not exist and cannot be assigned to preset(s)."
           delete="Account has assigned preset(s) and cannot be deleted."/>
      <add key="PK_AccountRole"
           primary="AccountRole"
           foreign=""
           insert="Account and role combination must be unique."
           update="Account and role combination must be unique."
           delete=""/>
      <add key="CK_AccountRole_AccountId_RoleId"
           primary="AccountRole"
           foreign=""
           insert="Emplacement and application of account and role must be the same."
           update="Emplacement and application of account and role must be the same."
           delete=""/>
      <!--Permission-->
      <add key="UK_Permission_ApplicationId_Code"
           primary="Permission"
           foreign=""
           insert="Permission code must be unique for selected application."
           update="Permission code must be unique for selected application."
           delete=""/>
      <add key="FK_RolePermission_Permission"
           primary="Permission"
           foreign="RolePermission"
           insert="Permission not valid or does not exist and cannot be assigned to role(s)."
           update="Permission not valid or does not exist and cannot be assigned to role(s)."
           delete="Permission is assigned to role(s) and cannot be deleted."/>
      <!--Role-->
      <add key="UK_Role_EmplacementId_ApplicationId_Code"
           primary="Role"
           foreign=""
           insert="Role code must be unique for selected emplacement and application."
           update="Role code must be unique for selected emplacement and application."
           delete=""/>
      <add key="FK_RolePermission_Role"
           primary="Role"
           foreign="RolePermission"
           insert="Role not valid or does not exist and cannot be assigned to permission(s)."
           update="Role not valid or does not exist and cannot be assigned to permission(s)."
           delete="Role has assigned permission(s) and cannot be deleted."/>
      <add key="FK_AccountRole_Role"
           primary="Role"
           foreign="AccountRole"
           insert="Role not valid or does not exist and cannot be assigned to account(s)."
           update="Role not valid or does not exist and cannot be assigned to account(s)."
           delete="Role has assigned account(s) and cannot be deleted."/>
      <add key="PK_RolePermission"
           primary="RolePermission"
           foreign=""
           insert="Role and permission combination must be unique."
           update="Role and permission combination must be unique."
           delete=""/>
      <add key="CK_RolePermission_RoleId_PermissionId"
           primary="RolePermission"
           foreign=""
           insert="Application of role and permissions must be the same."
           update="Application of role and permissions must be the same."
           delete=""/>
      <!--Log-->
      <add key="CK_Log_ApplicationId_AccountId"
           primary="RolePermission"
           foreign=""
           insert="Application of account and log must be the same."
           update="Application of account and log must be the same."
           delete=""/>

      <!--Multilanguage-->
      <!--Culture-->
      <add key="UK_Culture_EmplacementId_Code"
           primary="Culture"
           foreign=""
           insert="Culture code must be unique for selected emplacement."
           update="Culture code must be unique for selected emplacement."
           delete=""/>
      <add key="UK_Culture_EmplacementId_Name"
           primary="Culture"
           foreign=""
           insert="Culture name must be unique for selected emplacement."
           update="Culture name must be unique for selected emplacement."
           delete=""/>
      <add key="FK_Translation_Culture"
           primary="Culture"
           foreign="Translation"
           insert="Culture not valid or does not exist and cannot be assigned to translation(s)."
           update="Culture not valid or does not exist and cannot be assigned to translation(s)."
           delete="Culture is assigned to translation(s) and cannot be deleted."/>
      <!--Resource-->
      <add key="UK_Resource_EmplacementId_ApplicationId_Code_Category"
           primary="Resource"
           foreign=""
           insert="Resource code and category must be unique for selected emplacement and application."
           update="Resource code and category must be unique for selected emplacement and application."
           delete=""/>
      <add key="UI_Resource_EmplacementId_ApplicationId_Index"
           primary="Resource"
           foreign=""
           insert="Resource index must be null or unique for selected emplacement and application."
           update="Resource index must be null or unique for selected emplacement and application."
           delete=""/>
      <add key="FK_Translation_Resource"
           primary="Resource"
           foreign="Translation"
           insert="Resource not valid or does not exist and cannot be assigned to translation(s)."
           update="Resource not valid or does not exist and cannot be assigned to translation(s)."
           delete="Resource is assigned to translation(s) and cannot be deleted."/>
      <!--Translation-->
      <add key="UK_Translation_ResourceId_CultureId"
           primary="Translation"
           foreign=""
           insert="Translation resource and culture must be unique."
           update="Translation resource and culture must be unique."
           delete=""/>
      <add key="CK_Translation_ResourceId_CultureId"
           primary="Translation"
           foreign=""
           insert="Emplacement of resource and culture must be the same."
           update="Emplacement of resource and culture must be the same."
           delete=""/>

      <!--Owner-->
      <!--Person-->
      <add key="UK_Person_EmplacementId_Code"
           primary="Person"
           foreign=""
           insert="Person code must be unique for selected emplacement."
           update="Person code must be unique for selected emplacement."
           delete=""/>
      <add key="UK_Person_EmplacementId_IDNP"
           primary="Person"
           foreign=""
           insert="Person IDNP must be unique for selected emplacement."
           update="Person IDNP must be unique for selected emplacement."
           delete=""/>
      <add key="UI_Person_UserId"
           primary="Person"
           foreign=""
           insert="User must be undefined or unique for selected person."
           update="User must be undefined or unique for selected person."
           delete=""/>
      <add key="UI_Person_EmplacementId_Email"
           primary="Person"
           foreign=""
           insert="Person e-mail must be undefined or unique for selected emplacement."
           update="Person e-mail must be undefined or unique for selected emplacement."
           delete=""/>
      <add key="CK_Person_EmplacementId_UserId"
           primary="Person"
           foreign=""
           insert="Emplacement of person and user must be the same."
           update="Emplacement of person and user must be the same."
           delete=""/>
      <add key="FK_Employee_Person"
           primary="Person"
           foreign="Employee"
           insert="Person not valid or does not exist and cannot be assigned to employee(s)."
           update="Person not valid or does not exist and cannot be assigned to employee(s)."
           delete="Person is employeed at organisation(s) and cannot be deleted."/>
      <!--Organisation-->
      <add key="UK_Organisation_EmplacementId_Code"
           primary="Organisation"
           foreign=""
           insert="Organisation code must be unique for selected emplacement."
           update="Organisation code must be unique for selected emplacement."
           delete=""/>
      <add key="UK_Organisation_EmplacementId_IDNO"
           primary="Organisation"
           foreign=""
           insert="Organisation IDNO must be unique for selected emplacement."
           update="Organisation IDNO must be unique for selected emplacement."
           delete=""/>
      <add key="FK_Employee_Organisation"
           primary="Organisation"
           foreign="Employee"
           insert="Organisation not valid or does not exist and cannot be assigned to employee(s)."
           update="Organisation not valid or does not exist and cannot be assigned to employee(s)."
           delete="Organisation is employeed at organisation(s) and cannot be deleted."/>
      <!--Employee-->
      <add key="UK_Employee_PersonId_OrganisationId_Function"
           primary="Employee"
           foreign=""
           insert="Employee function must be unique for selected person and organisation."
           update="Employee function must be unique for selected person and organisation."
           delete=""/>
      <add key="CK_Employee_EmplacementId_PersonId_OrganisationId"
           primary="Employee"
           foreign=""
           insert="Emplacement of person and organisation must be the same."
           update="Emplacement of person and organisation must be the same."
           delete=""/>
      <add key="CK_EmployeeState_From_To"
           primary="Employee"
           foreign=""
           insert="Employee state from date must be less than state to date."
           update="Employee state from date must be less than state to date."
           delete=""/>
      <add key="CK_EmployeeState_EmployeeId_From_To"
           primary="Employee"
           foreign=""
           insert="Employee state period cannot overlap for selected employee."
           update="Employee state period cannot overlap for selected employee."
           delete=""/>
      <add key="FK_EmployeeState_Employee"
           primary="Employee"
           foreign="EmployeeState"
           insert="Employee not valid or does not exist and cannot be assigned to state(s)."
           update="Employee not valid or does not exist and cannot be assigned to state(s)."
           delete="Employee has states and cannot be deleted."/>

      <!--GeolocationDatabase-->

      <!--Geolocation-->
      <!--Source-->
      <add key="UK_Source_Code"
           primary="Source"
           foreign=""
           insert="Source code must be unique."
           update="Source code must be unique."
           delete=""/>
      <add key="FK_Portion_Source"
           primary="Source"
           foreign="Portion"
           insert="Source not valid or does not exist and cannot be assigned to portion(s)."
           update="Source not valid or does not exist and cannot be assigned to portion(s)."
           delete="Source is assigned to portion(s) and cannot be deleted."/>
      <!--Portion-->
      <add key="UK_Portion_SourceId_Code"
           primary="Portion"
           foreign=""
           insert="Portion code must be unique for selected source."
           update="Portion code must be unique for selected source."
           delete=""/>
      <!--Location-->
      <add key="PK_Location"
           primary="Location"
           foreign=""
           insert="Location code must be unique."
           update="Location code must be unique."
           delete=""/>
      <add key="FK_Block_Location"
           primary="Location"
           foreign="Block"
           insert="Location not valid or does not exist and cannot be assigned to block(s)."
           update="Location not valid or does not exist and cannot be assigned to block(s)."
           delete="Location is assigned to block(s) and cannot be deleted."/>
      <!--Block-->
      <add key="PK_Blocks"
           primary="Block"
           foreign=""
           insert="Combination of IP block numbers must be unique."
           update="Combination of IP block numbers must be unique."
           delete=""/>

    </database.constraints>

</configuration>