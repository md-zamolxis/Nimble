<?xml version="1.0" encoding="utf-8"?>
<configuration>

  <configSections>
    <section name="database.constraints" type="Nimble.Business.Engine.Core.DatabaseConstraintConfiguration"/>
    <section name="service.roles" type="Nimble.Business.Engine.Core.ServiceRolesConfiguration"/>
  </configSections>

  <appSettings>
    <!--
      WCF
      Maps connection string name to connection string attribute name of template database.
    -->
    <add key="GenericDatabase" value="Nimble"/>
    <!--
      WCF
      Maps connection string name to connection string attribute name of geolocation database.
    -->
    <add key="GeolocationDatabase" value=""/>
    <!--
      WCF
      Maps connection string name to connection string attribute name of Hangfire database.
    -->
    <add key="HangfireDatabase" value="Hangfire"/>
    <!--
      WCF
      Used to indicate folder pattern where backups of database can be stored.
      WARNING: be sure that sql user has access to backup databases and 
      read/write access into folder specified above.
    -->
    <add key="DatabaseBackupsFolderPattern" value=""/>
    <!--
      WCF
      Used to indicate folder where temporary data are stored.
      WARNING: be sure that user under WCF runs has access for
      read/write in folder specified above.
    -->
    <add key="TemporaryDataFolder" value=""/>
    <!--
      WCF
      Specifies database command timeout.
    -->
    <add key="DatabaseCommandTimeout" value="600"/>
    <!--
      WCF
      Specifies transaction scope timeout.
    -->
    <add key="TransactionScopeTimeout" value="00:30:00"/>
    <!--
      WCF
      Specifies transaction lock timeout.
    -->
    <add key="TransactionLockTimeout" value="00:00:30"/>
    <!--
      WCF
      Specifies transaction lock delay (in milliseconds).
    -->
    <add key="TransactionLockDelay" value="1000"/>
    <!-- 
      WCF
      Specifies log query delay.
    -->
    <add key="SqlCommandDelay" value="00:00:30"/>
    <!-- 
      WCF
      If databases specified in connection strings do not exist, on first start of services 
      creates and restores databases from backup at filename indicated in value tags.
      WARNING: be sure that sql user has access to create databases and user under which service 
      runs has access to filename. Key tag and database name must be the same - service will create 
      databases at default path.
    -->
    <add key="Nimble" value="C:\Programs\Nimble\Nimble.Binaries\Database.Backups\Nimble.bak"/>
    <!--
      WCF/WA
      Specifies application event log source.
    -->
    <add key="ApplicationEventLogSource" value="Nimble.Server.Iis"/>
    <!--
      WCF
      On "true" service will try to restore databases even if they exists.
      WARNING: restore will fail if service has not exclusive access on databases.
    -->
    <add key="ForceRestoringDatabases" value="false"/>
    <!--
      WCF/WA
      List of business object which will be stored in cache to avoid frequent databases requests.
      WARNING: if records in databases are changed not through service then objects do not refresh.
    -->
    <add key="CachedEntityTypeNames" value="Emplacement; Application; User; Account; Role; Permission; Culture; Resource; Translation"/>
    <!--
      WCF/WA
      On "true" use translation functionality for string, otherwise - do not translate.
    -->
    <add key="UseTranslationModule" value="true"/>
    <!--
      WCF/WA
      Indicates with how many days latency to update last used date of strings for translation management.
    -->
    <add key="ResourceLastUsedLatencyDays" value="10"/>
    <!--
      WCF
      On first start of services creates an culture with code as value tag and name as specified below
      if does not exists.
      WARNING: to create culture, code and name must be declared both.
    -->
    <add key="CultureCode" value="en"/>
    <!--
      WCF/WA
      WCF - on first start of services used for create an culture with name as value tag and code as 
            specified above if does not exists;
      WA  - indicates default culture used in sources for accessing google translate service
            in translation management.
    -->
    <add key="CultureName" value="English"/>
    <!--
      WCF
      On first start of services assigns culture specified above to emplacement specified below.
    -->
    <add key="DefineEmplacementCulture" value="true"/>
    <!--
      WCF
      On first start of services assigns culture specified above to account specified below.
    -->
    <add key="DefineAccountCulture" value="true"/>
    <!--
      WCF
      Indicates latency to update last used date of account for security management.
    -->
    <add key="AccountLastUsedLatency" value="00:30:00"/>
    <!--
      WCF
      On "true" at first start of services copies all not existing translation elements 
      (cultures, strings, translations) at specified above emplacement and application from database.
    -->
    <add key="MultilanguageCopy" value="true"/>
    <!--
      WCF/WA
      On "true" load all multilanguage objects in cache on first start to avoid frequent database/services requests.
      WARNING: on remote WCF services through loose coupling set "true" to avoid big traffic 
      provided by many SOAP messages.
    -->
    <add key="MultilanguageCacheOnLoad" value="true"/>
    <!--
      WCF
      Indicates context type for session (Win, WCF, Web).
      WARNING: on "Win" or "Web" emplacement and application code must be defined below.
    -->
        <add key="SessionContextType" value="Web"/>
    <!--
      WCF
      On true enable token context without GenericDatabase.
    -->
        <add key="UseProcessToken" value="true"/>
    <!--
      WCF
      Timeout for WCF inactive sessions.
      WARNING: ussually must be greater than timeout of consuming application.
    -->
    <add key="SessionInactivityTimeout" value="00:30:00"/>
    <!--
      WCF
      Used load/save tokens on start/end
    -->
    <add key="OpenTokens" value="C:\Programs\ProvectaPOS\ProvectaPOS.Server\ProvectaPOS.Server.Iis\OpenTokens.json"/>
    <!--
      WCF/WA
      WCF - on first start of services creates an emplacement with name as value tag if does not exists and
            indicates default emplacement used for translation in web context;
      WA  - included in message header on every client requests to identify at which node from
            distributed data warehouse belongs.
    -->
    <add key="EmplacementCode" value="Nimble.Central"/>
    <!--
      WCF
      On first start of services updates administrative flag of specified above emplacement.
      WARNING: on "true" management will extend over all objects, on "false" - just only objects 
               belonging specified emplacement.
    -->
    <add key="EmplacementIsAdministrative" value="true"/>
    <!--
      WCF
      On first start of services creates an user/password at specified above emplacement.
    -->
    <add key="UserCode" value="sa"/>
    <add key="UserPassword" value="1"/>
    <!--
      WCF/WA
      WCF - on first start of services creates an application with name as value tag if does not exists and
            indicates default application used for translation in web context;
      WA  - included in message header on every client requests to identify application used.
    -->
    <add key="ApplicationCode" value="Nimble.Server.Iis"/>
    <!--
      WCF
      On first start of services updates administrative flag of specified above application.
      WARNING: on "true" management will extend over all objects, on "false" - just only objects 
               belonging specified application.
    -->
    <add key="ApplicationIsAdministrative" value="true"/>
    <!--
      WCF
      On first start of services creates an role with name as value tag at specified above 
      emplacement and application, assigns it to user of application specified above and 
      assigns all existed or updated permissions to it.
    -->
    <add key="RoleCode" value="Administrators"/>
    <!--
      WCF
      On "true" at first start of services updates permissions entries,
      according with associated enumerator at application specified above
      (on "false" or disabling this tag will increase services start 
      if no need on creation/modification object at first start).
    -->
    <add key="UpdatePermissions" value="true"/>
    <!--
      WCF
      On "true" at first start of services updates permissions entries,
      according with employee actor type enumerator at application specified above
      (on "false" will increase services start if no need
      on creation/modification object at first start).
      WARNING: for assigning new permissions to actor roles, [UpdatePermissions] tag must be enabled.
    -->
    <add key="UpdateEmployeeActorTypeRoles" value="true"/>
    <!--
      WA
      Indicates state type for storing data on IIS pages (Session, View, Control) as:
      0 - 0
      1 - Session
      2 - View
      3 - Session, View
      4 - Control
      5 - Session, Control
      6 - View, Control
      7 - Session, View, Control
    -->
    <add key="IisStateType" value="1"/>
    <!--
      WA
      On "true" IIS marks page with tags that deny browser cache.
    -->
    <add key="DenyBrowserPageCache" value="true"/>
    <!--
      WA
      On "true" log page visits of authenticated users (user, application, page, IP-address).
    -->
    <add key="LogPageVisits" value="false"/>
    <!--
      WA
      Used to date representation.
    -->
    <add key="DateFormat" value="dd/MM/yyyy"/>
    <!--
      WA
      Used to mask date input.
    -->
    <add key="DateMask" value="99/99/9999"/>
    <!--
      WCF/WA
      On "true" IP info is stored with geolocation details (see http://www.maxmind.com/).
      WARNING: for big geolocation data getting IP info can troubleshoot performance.
    -->
    <add key="StoreIpInfo" value="false"/>
    <!--
      WCF/WA
      Used for sending mail. (Enable https://www.google.com/settings/security/lesssecureapps for Google)
    -->
    <add key="SmtpHost" value="smtp.gmail.com"/>
    <add key="SmtpPort" value="587"/>
    <add key="SmtpUserName" value="sapmoldova@gmail.com"/>
    <add key="SmtpPassword" value="CSD[990407]"/>
    <add key="SmtpEnableSsl" value="true"/>
    <add key="SmtpUseDefaultCredentials" value="false"/>
    <add key="SmtpTimeout" value="5000"/>
    <add key="SmtpFailedTimeout" value="5000"/>
    <!--
      WCF
      Used for minimal date value.
    -->
    <add key="MinDate" value="1800-01-01 00:00:00.000"/>
    <!--
      WCF
      Used for maximal date value.
    -->
    <add key="MaxDate" value="2200-12-31 00:00:00.000"/>
    <!--
      WA
      Used to overwrite WCF services host.
      WARNING: does not work for ServiceModel endpoints explicitly defined in ~.config.
    -->
    <add key="ServiceHost" value="http://localhost/Nimble.Server.Iis/"/>
    <!--
      WA
      Used to overwrite WCF binding security type.
      WARNING: is overridden when client explicitly define it on start.
    -->
    <add key="BasicHttpBindingSecurityType" value="Default"/>
    <!--
      WA
      Used for getting client host.
    -->
    <add key="ClientHostCheckUrl" value="http://checkip.dyndns.org"/>
    <add key="ClientHostCheckPattern" value="Current IP Address:\s(\d+.\d+.\d+.\d+)"/>
    <!--
      WCF
      Used to generate reset password URL.
        -->
    <add key="ResetPasswordUrl" value="http://localhost/Nimble.Server.Iis/Framework/Common.svc/ResetPasswordProceed/{0}/{1}"/>
    <!--
      WCF
      Enable access to hangfire dashboard from listed IPs.
    -->
    <add key="HangfireAuthorize" value="::1;127.0.0.1;80.245.81.59"/>
    <!--
      WCF
      On "false" allows to use hangfire and by default write logs through hangfire background job.
    -->
    <add key="HangfireDisabled" value="false"/>
    <!--
      WCF
      Used to define hangfire server name.
    -->
    <add key="HangfireInstance" value="Nimble"/>

  </appSettings>

  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-4.5.0.0" newVersion="4.5.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

  <connectionStrings>
    <add name="Nimble" connectionString="Data Source=CSDW7U\MSSQL2008E;Initial Catalog=Nimble;Persist Security Info=True;User ID=sa;Password=MSSQL.2008E;Max Pool Size=100;Min Pool Size=1;" providerName="System.Data.SqlClient"/>
    <add name="Hangfire" connectionString="Data Source=CSDW7U\MSSQL2008E;Initial Catalog=Hangfire;Persist Security Info=True;User ID=sa;Password=MSSQL.2008E;Max Pool Size=100;Min Pool Size=1;" providerName="System.Data.SqlClient"/>
    <!--<add name="Nimble" connectionString="Data Source=CSD\MSSQL2008E;Initial Catalog=Nimble;Persist Security Info=True;User ID=sa;Password=2004;Max Pool Size=100;Min Pool Size=1;" providerName="System.Data.SqlClient"/>-->
    <!--<add name="MaxMind" connectionString="Data Source=CSDW7U\MSSQL2008E;Initial Catalog=MaxMind;Persist Security Info=True;User ID=sa;Password=MSSQL.2008E;Max Pool Size=100;Min Pool Size=1;" providerName="System.Data.SqlClient"/>-->
  </connectionStrings>

  <system.web>
    <httpRuntime executionTimeout="3600" maxRequestLength="2097151"/>
    <compilation debug="true" targetFramework="4.6.1"/>
    <customErrors mode="Off"/>
  </system.web>

  <system.serviceModel>
    <serviceHostingEnvironment
      multipleSiteBindingsEnabled="true"
      aspNetCompatibilityEnabled="true">
    </serviceHostingEnvironment>
    <bindings>
      <basicHttpBinding>
        <binding
          name="basicHttpBinding"
          closeTimeout="01:00:00"
          openTimeout="01:00:00"
          receiveTimeout="01:00:00"
          sendTimeout="01:00:00"
          bypassProxyOnLocal="false"
          hostNameComparisonMode="StrongWildcard"
          maxBufferSize="2147483647"
          maxBufferPoolSize="524288"
          maxReceivedMessageSize="2147483647"
          messageEncoding="Text"
          textEncoding="utf-8"
          transferMode="Streamed"
          useDefaultWebProxy="true"
          allowCookies="false">
          <readerQuotas
            maxDepth="32"
            maxStringContentLength="2147483647"
            maxArrayLength="2147483647"
            maxBytesPerRead="4096"
            maxNameTableCharCount="16384"/>
          <security mode="None">
            <transport
              clientCredentialType="None"
              proxyCredentialType="None"
              realm=""/>
            <message
              algorithmSuite="Default"
              clientCredentialType="UserName"/>
          </security>
          <!--security mode="Transport">
            <transport
              clientCredentialType="None"
              proxyCredentialType="None"
              realm=""/>
            <message
              algorithmSuite="Default"
              clientCredentialType="Certificate"/>
            </security-->
        </binding>
      </basicHttpBinding>
      <webHttpBinding>
        <binding
          name="webHttpBinding"
          closeTimeout="01:00:00"
          openTimeout="01:00:00"
          receiveTimeout="01:00:00"
          sendTimeout="01:00:00"
          maxBufferSize="2147483647"
          maxBufferPoolSize="524288"
          maxReceivedMessageSize="2147483647"
          crossDomainScriptAccessEnabled="true">
          <readerQuotas
            maxDepth="32"
            maxStringContentLength="2147483647"
            maxArrayLength="2147483647"
            maxBytesPerRead="4096"
            maxNameTableCharCount="16384"/>
          <security mode="None"/>
          <!--security mode="Transport">
            <transport
              clientCredentialType="None"
              proxyCredentialType="None"
              realm=""/>
          </security-->
        </binding>
      </webHttpBinding>
    </bindings>
    <services>
      <service
        behaviorConfiguration="behaviorConfigurationService"
        name="Nimble.Server.Iis.Framework.Common">
        <endpoint
          binding="basicHttpBinding"
          bindingConfiguration="basicHttpBinding"
          contract="Nimble.Server.Iis.Framework.Interface.ICommon">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint
          address="mex"
          binding="mexHttpBinding"
          contract="IMetadataExchange"/>
        <endpoint
          address="Web"
          binding="webHttpBinding"
          bindingConfiguration="webHttpBinding"
          contract="Nimble.Server.Iis.Framework.Interface.ICommon"
          behaviorConfiguration="behaviorConfigurationEndpoint"/>
      </service>
      <service
        behaviorConfiguration="behaviorConfigurationService"
        name="Nimble.Server.Iis.Framework.Security">
        <endpoint
          binding="basicHttpBinding"
          bindingConfiguration="basicHttpBinding"
          contract="Nimble.Server.Iis.Framework.Interface.ISecurity">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint
          address="mex"
          binding="mexHttpBinding"
          contract="IMetadataExchange"/>
        <endpoint
          address="Web"
          binding="webHttpBinding"
          bindingConfiguration="webHttpBinding"
          contract="Nimble.Server.Iis.Framework.Interface.ISecurity"
          behaviorConfiguration="behaviorConfigurationEndpoint"/>
      </service>
      <service
        behaviorConfiguration="behaviorConfigurationService"
        name="Nimble.Server.Iis.Framework.Multilanguage">
        <endpoint
          binding="basicHttpBinding"
          bindingConfiguration="basicHttpBinding"
          contract="Nimble.Server.Iis.Framework.Interface.IMultilanguage">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint
          address="mex"
          binding="mexHttpBinding"
          contract="IMetadataExchange"/>
        <endpoint
          address="Web"
          binding="webHttpBinding"
          bindingConfiguration="webHttpBinding"
          contract="Nimble.Server.Iis.Framework.Interface.IMultilanguage"
          behaviorConfiguration="behaviorConfigurationEndpoint"/>
      </service>
      <service
        behaviorConfiguration="behaviorConfigurationService"
        name="Nimble.Server.Iis.Framework.Maintenance">
        <endpoint
          binding="basicHttpBinding"
          bindingConfiguration="basicHttpBinding"
          contract="Nimble.Server.Iis.Framework.Interface.IMaintenance">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint
          address="mex"
          binding="mexHttpBinding"
          contract="IMetadataExchange"/>
        <endpoint
          address="Web"
          binding="webHttpBinding"
          bindingConfiguration="webHttpBinding"
          contract="Nimble.Server.Iis.Framework.Interface.IMaintenance"
          behaviorConfiguration="behaviorConfigurationEndpoint"/>
      </service>
      <service
        behaviorConfiguration="behaviorConfigurationService"
        name="Nimble.Server.Iis.Framework.Geolocation">
        <endpoint
          binding="basicHttpBinding"
          bindingConfiguration="basicHttpBinding"
          contract="Nimble.Server.Iis.Framework.Interface.IGeolocation">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint
          address="mex"
          binding="mexHttpBinding"
          contract="IMetadataExchange"/>
        <endpoint
          address="Web"
          binding="webHttpBinding"
          bindingConfiguration="webHttpBinding"
          contract="Nimble.Server.Iis.Framework.Interface.IGeolocation"
          behaviorConfiguration="behaviorConfigurationEndpoint"/>
      </service>
      <service
        behaviorConfiguration="behaviorConfigurationService"
        name="Nimble.Server.Iis.Framework.Owner">
        <endpoint
          binding="basicHttpBinding"
          bindingConfiguration="basicHttpBinding"
          contract="Nimble.Server.Iis.Framework.Interface.IOwner">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint
          address="mex"
          binding="mexHttpBinding"
          contract="IMetadataExchange"/>
        <endpoint
          address="Web"
          binding="webHttpBinding"
          bindingConfiguration="webHttpBinding"
          contract="Nimble.Server.Iis.Framework.Interface.IOwner"
          behaviorConfiguration="behaviorConfigurationEndpoint"/>
      </service>
      <service
        behaviorConfiguration="behaviorConfigurationService"
        name="Nimble.Server.Iis.Framework.Multicurrency">
        <endpoint
          binding="basicHttpBinding"
          bindingConfiguration="basicHttpBinding"
          contract="Nimble.Server.Iis.Framework.Interface.IMulticurrency">
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <endpoint
          address="mex"
          binding="mexHttpBinding"
          contract="IMetadataExchange"/>
        <endpoint
          address="Web"
          binding="webHttpBinding"
          bindingConfiguration="webHttpBinding"
          contract="Nimble.Server.Iis.Framework.Interface.IMulticurrency"
          behaviorConfiguration="behaviorConfigurationEndpoint"/>
      </service>
    </services>
    <extensions>
      <behaviorExtensions>
        <add name="exceptionService" type="Nimble.Server.Iis.Extension.ExceptionBehaviorExtensionElement, Nimble.Server.Iis"/>
        <add name="jsonWebHttp" type="Nimble.Server.Iis.Extension.JsonBehaviorExtensionElement, Nimble.Server.Iis"/>
        <add name="corsWebHttp" type="Nimble.Business.Engine.Common.CorsBehaviorExtensionElement, Nimble.Business.Engine"/>
      </behaviorExtensions>
    </extensions>
    <behaviors>
      <endpointBehaviors>
        <behavior name="behaviorConfigurationEndpoint">
          <webHttp/>
          <jsonWebHttp/>
          <corsWebHttp/>
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="behaviorConfigurationService">
          <serviceMetadata
            httpGetEnabled="true"
            httpsGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <serviceThrottling
            maxConcurrentCalls="65536"
            maxConcurrentSessions="65536"
            maxConcurrentInstances="65536"/>
          <dataContractSerializer maxItemsInObjectGraph="2147483647"/>
          <exceptionService/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>

  <system.diagnostics>
    <trace autoflush="true"/>
    <sources>
      <source
        name="System.ServiceModel"
        switchValue="Critical, Error"
        propagateActivity="true">
        <listeners>
          <add
            name="Trace"
            type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
            initializeData="Trace.e2e"/>
        </listeners>
      </source>
    </sources>
  </system.diagnostics>

  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true">
      <add name="JsonHttpModule" type="Nimble.Business.Engine.Common.JsonHttpModule"/>
    </modules>
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="2147483647"/>
      </requestFiltering>
    </security>
  </system.webServer>

  <database.constraints>

    <!--[GenericDatabase]-->

    <!--[Common]-->
    <!--[Preset]-->
    <add key="UK_Preset_AccountId_PresetEntityType_Code_Category"
         primary="[Common].[Preset]"
         foreign=""
         insert="Preset category must be unique for selected code, account and preset entity type."
         update="Preset category must be unique for selected code, account and preset entity type."
         delete=""/>
    <add key="UI_Preset_AccountId_PresetEntityType_IsDefault"
         primary="[Common].[Preset]"
         foreign=""
         insert="Preset default status can be only one for selected account and preset entity type."
         update="Preset default status can be only one for selected account and preset entity type."
         delete=""/>
    <add key="FK_Preset_Account"
         primary="[Security].[Account]"
         foreign="[Common].[Preset]"
         insert="Account not valid or does not exist and cannot be assigned to preset(s)."
         update="Account not valid or does not exist and cannot be assigned to preset(s)."
         delete="Account has assigned preset(s) and cannot be deleted."/>
    <!--[Split]-->
    <add key="UK_Split_EmplacementId_SplitEntityType_SplitEntityCode"
         primary="[Common].[Split]"
         foreign=""
         insert="Split entity code must be unique for selected emplacement and entity type."
         update="Split entity code must be unique for selected emplacement and entity type."
         delete=""/>
    <add key="FK_Split_Emplacement"
         primary="[Security].[Emplacement]"
         foreign="[Common].[Split]"
         insert="Emplacement not valid or does not exist and cannot be assigned to split(s)."
         update="Emplacement not valid or does not exist and cannot be assigned to split(s)."
         delete="Emplacement is assigned to split(s) and cannot be deleted."/>
    <!--[Group]-->
    <add key="UK_Group_SplitId_Code"
         primary="[Common].[Group]"
         foreign=""
         insert="Group code must be unique for selected emplacement."
         update="Group code must be unique for selected emplacement."
         delete=""/>
    <add key="UI_Group_SplitId_IsDefault"
         primary="[Common].[Group]"
         foreign=""
         insert="Group default status can be only one for selected split."
         update="Group default status can be only one for selected split."
         delete=""/>
    <add key="FK_Group_Split"
         primary="[Common].[Split]"
         foreign="[Common].[Group]"
         insert="Split not valid or does not exist and cannot be assigned to group(s)."
         update="Split not valid or does not exist and cannot be assigned to group(s)."
         delete="Split is assigned to group(s) and cannot be deleted."/>
    <!--[Bond]-->
    <add key="PK_Bond"
         primary="[Common].[Bond]"
         foreign=""
         insert="Entity and group combination must be unique."
         update="Entity and group combination must be unique."
         delete=""/>
    <add key="CK_Bond_Emplacement_EntityId_GroupId"
         primary="[Common].[Bond]"
         foreign=""
         insert="Emplacement of entity group and entity must be the same."
         update="Emplacement of entity group and entity must be the same."
         delete=""/>
    <add key="CK_Bond_Split_EntityId_GroupId"
         primary="[Common].[Bond]"
         foreign=""
         insert="Entity cannot be assigned more than once to the same exclusive split."
         update="Entity cannot be assigned more than once to the same exclusive split."
         delete=""/>
    <add key="FK_Bond_Group"
         primary="[Common].[Group]"
         foreign="[Common].[Bond]"
         insert="Entity group not valid or does not exist and cannot be assigned to entity(s)."
         update="Entity group not valid or does not exist and cannot be assigned to entity(s)."
         delete="Entity group has assigned entity(s) and cannot be deleted."/>
    <!--[Hierarchy]-->
    <add key="UK_Hierarchy_EntityId"
         primary="[Common].[Hierarchy]"
         foreign=""
         insert="Hierarchy entity identifier must be unique."
         update="Hierarchy entity identifier must be unique."
         delete=""/>
    <add key="CK_Hierarchy_Left_Right"
         primary="[Common].[Hierarchy]"
         foreign=""
         insert="Hierarchy left value must be less than hierarchy right value."
         update="Hierarchy left value must be less than hierarchy right value."
         delete=""/>
    <!--[Filestream]-->
    <add key="UK_Filestream_EntityId_Code"
         primary="[Common].[Filestream]"
         foreign=""
         insert="Filestream code must be unique for selected entity."
         update="Filestream code must be unique for selected entity."
         delete=""/>
    <add key="UI_Filestream_EntityId_IsDefault"
         primary="[Common].[Filestream]"
         foreign=""
         insert="Filestream default status can be only one for selected entity."
         update="Filestream default status can be only one for selected entity."
         delete=""/>
    <add key="UI_Filestream_ReferenceId"
         primary="[Common].[Filestream]"
         foreign=""
         insert="Filestream reference must be unique."
         update="Filestream reference must be unique."
         delete=""/>
    <!--[Batch]-->
    <!--[Operation]-->
    <add key="UK_Operation_BatchId_Code"
         primary="[Common].[Operation]"
         foreign=""
         insert="Operation code must be unique for selected batch."
         update="Operation code must be unique for selected batch."
         delete=""/>
    <add key="FK_Operation_Batch"
         primary="[Common].[Batch]"
         foreign="[Common].[Operation]"
         insert="Batch not valid or does not exist and cannot be assigned to operation(s)."
         update="Batch not valid or does not exist and cannot be assigned to operation(s)."
         delete="Batch is assigned to operation(s) and cannot be deleted."/>

    <!--[Security]-->
    <!--[Emplacement]-->
    <add key="UK_Emplacement_Code"
         primary="[Security].[Emplacement]"
         foreign=""
         insert="Emplacement code must be unique."
         update="Emplacement code must be unique."
         delete=""/>
    <!--[Application]-->
    <add key="UK_Application_Code"
         primary="[Security].[Application]"
         foreign=""
         insert="Application code must be unique."
         update="Application code must be unique."
         delete=""/>
    <!--[User]-->
    <add key="UK_User_EmplacementId_Code"
         primary="[Security].[User]"
         foreign=""
         insert="User code must be unique for selected emplacement."
         update="User code must be unique for selected emplacement."
         delete=""/>
    <add key="UI_User_EmplacementId_FacebookId"
         primary="[Security].[User]"
         foreign=""
         insert="User facebook id must be null or unique for selected emplacement."
         update="User facebook id must be null or unique for selected emplacement."
         delete=""/>
    <add key="UI_User_EmplacementId_GmailId"
         primary="[Security].[User]"
         foreign=""
         insert="User gmail id must be null or unique for selected emplacement."
         update="User gmail id must be null or unique for selected emplacement."
         delete=""/>
    <add key="FK_User_Emplacement"
         primary="[Security].[Emplacement]"
         foreign="[Security].[User]"
         insert="Emplacement not valid or does not exist and cannot be assigned to user(s)."
         update="Emplacement not valid or does not exist and cannot be assigned to user(s)."
         delete="Emplacement is assigned to user(s) and cannot be deleted."/>
    <!--[Account]-->
    <add key="UK_Account_UserId_ApplicationId"
         primary="[Security].[Account]"
         foreign=""
         insert="User must be unique for selected application."
         update="User must be unique for selected application."
         delete=""/>
    <add key="FK_Account_User"
         primary="[Security].[User]"
         foreign="[Security].[Account]"
         insert="User not valid or does not exist and cannot be assigned to account(s)."
         update="User not valid or does not exist and cannot be assigned to account(s)."
         delete="User is assigned to account(s) and cannot be deleted."/>
    <add key="FK_Account_Application"
         primary="[Security].[Application]"
         foreign="[Security].[Account]"
         insert="Application not valid or does not exist and cannot be assigned to account(s)."
         update="Application not valid or does not exist and cannot be assigned to account(s)."
         delete="Application is assigned to account(s) and cannot be deleted."/>
    <!--[AccountRole]-->
    <add key="PK_AccountRole"
         primary="[Security].[AccountRole]"
         foreign=""
         insert="Account and role combination must be unique."
         update="Account and role combination must be unique."
         delete=""/>
    <add key="CK_AccountRole_AccountId_RoleId"
         primary="[Security].[AccountRole]"
         foreign=""
         insert="Emplacement and application of account and role must be the same."
         update="Emplacement and application of account and role must be the same."
         delete=""/>
    <add key="FK_AccountRole_Account"
         primary="[Security].[Account]"
         foreign="[Security].[AccountRole]"
         insert="Account not valid or does not exist and cannot be assigned to role(s)."
         update="Account not valid or does not exist and cannot be assigned to role(s)."
         delete="Account has assigned role(s) and cannot be deleted."/>
    <add key="FK_AccountRole_Role"
         primary="[Security].[Role]"
         foreign="[Security].[AccountRole]"
         insert="Role not valid or does not exist and cannot be assigned to account(s)."
         update="Role not valid or does not exist and cannot be assigned to account(s)."
         delete="Role has assigned account(s) and cannot be deleted."/>
    <!--[Permission]-->
    <add key="UK_Permission_ApplicationId_Code"
         primary="[Security].[Permission]"
         foreign=""
         insert="Permission code must be unique for selected application."
         update="Permission code must be unique for selected application."
         delete=""/>
    <add key="FK_Permission_Application"
         primary="[Security].[Application]"
         foreign="[Security].[Permission]"
         insert="Application not valid or does not exist and cannot be assigned to permission(s)."
         update="Application not valid or does not exist and cannot be assigned to permission(s)."
         delete="Application is assigned to permission(s) and cannot be deleted."/>
    <!--[Role]-->
    <add key="UK_Role_EmplacementId_ApplicationId_Code"
         primary="[Security].[Role]"
         foreign=""
         insert="Role code must be unique for selected emplacement and application."
         update="Role code must be unique for selected emplacement and application."
         delete=""/>
    <add key="FK_Role_Emplacement"
         primary="[Security].[Emplacement]"
         foreign="[Security].[Role]"
         insert="Emplacement not valid or does not exist and cannot be assigned to role(s)."
         update="Emplacement not valid or does not exist and cannot be assigned to role(s)."
         delete="Emplacement is assigned to role(s) and cannot be deleted."/>
    <add key="FK_Role_Application"
         primary="[Security].[Application]"
         foreign="[Security].[Role]"
         insert="Application not valid or does not exist and cannot be assigned to role(s)."
         update="Application not valid or does not exist and cannot be assigned to role(s)."
         delete="Application is assigned to role(s) and cannot be deleted."/>
    <!--[RolePermission]-->
    <add key="PK_RolePermission"
         primary="[Security].[RolePermission]"
         foreign=""
         insert="Role and permission combination must be unique."
         update="Role and permission combination must be unique."
         delete=""/>
    <add key="CK_RolePermission_RoleId_PermissionId"
         primary="[Security].[RolePermission]"
         foreign=""
         insert="Application of role and permissions must be the same."
         update="Application of role and permissions must be the same."
         delete=""/>
    <add key="FK_RolePermission_Role"
         primary="[Security].[Role]"
         foreign="[Security].[RolePermission]"
         insert="Role not valid or does not exist and cannot be assigned to permission(s)."
         update="Role not valid or does not exist and cannot be assigned to permission(s)."
         delete="Role has assigned permission(s) and cannot be deleted."/>
    <add key="FK_RolePermission_Permission"
         primary="[Security].[Permission]"
         foreign="[Security].[RolePermission]"
         insert="Permission not valid or does not exist and cannot be assigned to role(s)."
         update="Permission not valid or does not exist and cannot be assigned to role(s)."
         delete="Permission is assigned to role(s) and cannot be deleted."/>
    <!--[Log]-->
    <add key="CK_Log_ApplicationId_AccountId"
         primary="[Security].[RolePermission]"
         foreign=""
         insert="Application of account and log must be the same."
         update="Application of account and log must be the same."
         delete=""/>
    <add key="FK_Log_Application"
         primary="[Security].[Application]"
         foreign="[Security].[Log]"
         insert="Application not valid or does not exist and cannot be assigned to log(s)."
         update="Application not valid or does not exist and cannot be assigned to log(s)."
         delete="Application is assigned to log(s) and cannot be deleted."/>
    <add key="FK_Log_Account"
         primary="[Security].[Account]"
         foreign="[Security].[Log]"
         insert="Account not valid or does not exist and cannot be assigned to log(s)."
         update="Account not valid or does not exist and cannot be assigned to log(s)."
         delete="Account has assigned log(s) and cannot be deleted."/>

    <!--[Multilanguage]-->
    <!--[Culture]-->
    <add key="UK_Culture_EmplacementId_Code"
         primary="[Multilanguage].[Culture]"
         foreign=""
         insert="Culture code must be unique for selected emplacement."
         update="Culture code must be unique for selected emplacement."
         delete=""/>
    <add key="UK_Culture_EmplacementId_Name"
         primary="[Multilanguage].[Culture]"
         foreign=""
         insert="Culture name must be unique for selected emplacement."
         update="Culture name must be unique for selected emplacement."
         delete=""/>
    <add key="FK_Culture_Emplacement"
         primary="[Security].[Emplacement]"
         foreign="[Multilanguage].[Culture]"
         insert="Emplacement not valid or does not exist and cannot be assigned to culture(s)."
         update="Emplacement not valid or does not exist and cannot be assigned to culture(s)."
         delete="Emplacement is assigned to culture(s) and cannot be deleted."/>
    <!--[Resource]-->
    <add key="UK_Resource_EmplacementId_ApplicationId_Code_Category"
         primary="[Multilanguage].[Resource]"
         foreign=""
         insert="Resource code and category must be unique for selected emplacement and application."
         update="Resource code and category must be unique for selected emplacement and application."
         delete=""/>
    <add key="UI_Resource_EmplacementId_ApplicationId_Index"
         primary="[Multilanguage].[Resource]"
         foreign=""
         insert="Resource index must be null or unique for selected emplacement and application."
         update="Resource index must be null or unique for selected emplacement and application."
         delete=""/>
    <add key="FK_Resource_Emplacement"
         primary="[Security].[Emplacement]"
         foreign="[Multilanguage].[Resource]"
         insert="Emplacement not valid or does not exist and cannot be assigned to resource(s)."
         update="Emplacement not valid or does not exist and cannot be assigned to resource(s)."
         delete="Emplacement is assigned to resource(s) and cannot be deleted."/>
    <add key="FK_Resource_Application"
         primary="[Security].[Application]"
         foreign="[Multilanguage].[Resource]"
         insert="Application not valid or does not exist and cannot be assigned to resource(s)."
         update="Application not valid or does not exist and cannot be assigned to resource(s)."
         delete="Application is assigned to resource(s) and cannot be deleted."/>
    <!--[Translation]-->
    <add key="UK_Translation_ResourceId_CultureId"
         primary="[Multilanguage].[Translation]"
         foreign=""
         insert="Translation resource and culture must be unique."
         update="Translation resource and culture must be unique."
         delete=""/>
    <add key="CK_Translation_ResourceId_CultureId"
         primary="[Multilanguage].[Translation]"
         foreign=""
         insert="Emplacement of resource and culture must be the same."
         update="Emplacement of resource and culture must be the same."
         delete=""/>
    <add key="FK_Translation_Culture"
         primary="[Multilanguage].[Culture]"
         foreign="[Multilanguage].[Translation]"
         insert="Culture not valid or does not exist and cannot be assigned to translation(s)."
         update="Culture not valid or does not exist and cannot be assigned to translation(s)."
         delete="Culture is assigned to translation(s) and cannot be deleted."/>
    <add key="FK_Translation_Resource"
         primary="[Multilanguage].[Resource]"
         foreign="[Multilanguage].[Translation]"
         insert="Resource not valid or does not exist and cannot be assigned to translation(s)."
         update="Resource not valid or does not exist and cannot be assigned to translation(s)."
         delete="Resource is assigned to translation(s) and cannot be deleted."/>

    <!--[Owner]-->
    <!--[Person]-->
    <add key="UK_Person_EmplacementId_Code"
         primary="[Owner].[Person]"
         foreign=""
         insert="Person code must be unique for selected emplacement."
         update="Person code must be unique for selected emplacement."
         delete=""/>
    <add key="UK_Person_EmplacementId_IDNP"
         primary="[Owner].[Person]"
         foreign=""
         insert="Person IDNP must be unique for selected emplacement."
         update="Person IDNP must be unique for selected emplacement."
         delete=""/>
    <add key="UI_Person_UserId"
         primary="[Owner].[Person]"
         foreign=""
         insert="User must be undefined or unique for selected person."
         update="User must be undefined or unique for selected person."
         delete=""/>
    <add key="UI_Person_EmplacementId_Email"
         primary="[Owner].[Person]"
         foreign=""
         insert="Person e-mail must be undefined or unique for selected emplacement."
         update="Person e-mail must be undefined or unique for selected emplacement."
         delete=""/>
    <add key="CK_Person_EmplacementId_UserId"
         primary="[Owner].[Person]"
         foreign=""
         insert="Emplacement of person and user must be the same."
         update="Emplacement of person and user must be the same."
         delete=""/>
    <add key="FK_Person_Emplacement"
         primary="[Security].[Emplacement]"
         foreign="[Owner].[Person]"
         insert="Emplacement not valid or does not exist and cannot be assigned to person(s)."
         update="Emplacement not valid or does not exist and cannot be assigned to person(s)."
         delete="Emplacement is assigned to person(s) and cannot be deleted."/>
    <add key="FK_Person_User"
         primary="[Security].[User]"
         foreign="[Owner].[Person]"
         insert="User not valid or does not exist and cannot be assigned to person."
         update="User not valid or does not exist and cannot be assigned to person."
         delete="User is assigned to person and cannot be deleted."/>
    <!--[Mark]-->
    <add key="UK_Mark_PersonId_MarkEntityType_EntityId"
         primary="[Owner].[Mark]"
         foreign=""
         insert="Mark entity id must be unique for the same person and entity type."
         update="Mark entity id must be unique for the same person and entity type."
         delete=""/>
    <add key="FK_Mark_Person"
         primary="[Owner].[Person]"
         foreign="[Owner].[Mark]"
         insert="Person not valid or does not exist and cannot be assigned to mark(s)."
         update="Person not valid or does not exist and cannot be assigned to mark(s)."
         delete="Person has mark(s) and cannot be deleted."/>
    <!--[Organisation]-->
    <add key="UK_Organisation_EmplacementId_Code"
         primary="[Owner].[Organisation]"
         foreign=""
         insert="Organisation code must be unique for selected emplacement."
         update="Organisation code must be unique for selected emplacement."
         delete=""/>
    <add key="UK_Organisation_EmplacementId_IDNO"
         primary="[Owner].[Organisation]"
         foreign=""
         insert="Organisation IDNO must be unique for selected emplacement."
         update="Organisation IDNO must be unique for selected emplacement."
         delete=""/>
    <add key="FK_Organisation_Emplacement"
         primary="[Security].[Emplacement]"
         foreign="[Owner].[Organisation]"
         insert="Emplacement not valid or does not exist and cannot be assigned to organisation(s)."
         update="Emplacement not valid or does not exist and cannot be assigned to organisation(s)."
         delete="Emplacement is assigned to organisation(s) and cannot be deleted."/>
    <!--[Branch]-->
    <add key="UK_Branch_OrganisationId_Code"
         primary="[Owner].[Branch]"
         foreign=""
         insert="Branch code must be unique for selected organisation."
         update="Branch code must be unique for selected organisation."
         delete=""/>
    <add key="FK_Branch_Organisation"
         primary="[Owner].[Organisation]"
         foreign="[Owner].[Branch]"
         insert="Organisation not valid or does not exist and cannot be assigned to branch(s)."
         update="Organisation not valid or does not exist and cannot be assigned to branch(s)."
         delete="Organisation has branch(s) and cannot be deleted."/>
    <!--[Range]-->
    <add key="UK_Range_BranchId_Code"
         primary="[Owner].[Range]"
         foreign=""
         insert="Range code must be unique for selected branch."
         update="Range code must be unique for selected branch."
         delete=""/>
    <add key="CK_Range_IpNumberFrom_IpNumberTo"
         primary="[Owner].[Range]"
         foreign=""
         insert="Range from address must be greater or equal with range to address."
         update="Range from address must be greater or equal with range to address."
         delete=""/>
    <add key="CK_Range_Id_BranchId_IpNumberFrom_IpNumberTo"
         primary="[Owner].[Range]"
         foreign=""
         insert="Range interval cannot overlap for selected branch."
         update="Range interval cannot overlap for selected branch."
         delete=""/>
    <add key="FK_Range_Branch"
         primary="[Owner].[Branch]"
         foreign="[Owner].[Range]"
         insert="Branch not valid or does not exist and cannot be assigned to range(s)."
         update="Branch not valid or does not exist and cannot be assigned to range(s)."
         delete="Branch has range(s) and cannot be deleted."/>
    <!--[Employee]-->
    <add key="UK_Employee_OrganisationId_Code"
         primary="[Owner].[Employee]"
         foreign=""
         insert="Employee code must be unique for selected organisation."
         update="Employee code must be unique for selected organisation."
         delete=""/>
    <add key="UK_Employee_PersonId_OrganisationId_Function"
         primary="[Owner].[Employee]"
         foreign=""
         insert="Employee function must be unique for selected person and organisation."
         update="Employee function must be unique for selected person and organisation."
         delete=""/>
    <add key="UI_Employee_OrganisationId_IsDefault"
         primary="[Owner].[Employee]"
         foreign=""
         insert="Employee default status can be only one for selected organisation."
         update="Employee default status can be only one for selected organisation."
         delete=""/>
    <add key="CK_Employee_PersonId_OrganisationId"
         primary="[Owner].[Employee]"
         foreign=""
         insert="Emplacement of person and organisation must be the same."
         update="Emplacement of person and organisation must be the same."
         delete=""/>
    <add key="FK_Employee_Person"
         primary="[Owner].[Person]"
         foreign="[Owner].[Employee]"
         insert="Person not valid or does not exist and cannot be assigned to employee(s)."
         update="Person not valid or does not exist and cannot be assigned to employee(s)."
         delete="Person is employeed at organisation(s) and cannot be deleted."/>
    <add key="FK_Employee_Organisation"
         primary="[Owner].[Organisation]"
         foreign="[Owner].[Employee]"
         insert="Organisation not valid or does not exist and cannot be assigned to employee(s)."
         update="Organisation not valid or does not exist and cannot be assigned to employee(s)."
         delete="Organisation has employee(s) and cannot be deleted."/>
    <!--[EmployeeState]-->
    <add key="CK_EmployeeState_From_To"
         primary="[Owner].[EmployeeState]"
         foreign=""
         insert="Employee state from date must be less than state to date."
         update="Employee state from date must be less than state to date."
         delete=""/>
    <add key="CK_EmployeeState_Id_EmployeeId_From_To"
         primary="[Owner].[EmployeeState]"
         foreign=""
         insert="Employee state interval cannot overlap for selected employee."
         update="Employee state interval cannot overlap for selected employee."
         delete=""/>
    <add key="FK_EmployeeState_Employee"
         primary="[Owner].[Employee]"
         foreign="[Owner].[EmployeeState]"
         insert="Employee not valid or does not exist and cannot be assigned to state(s)."
         update="Employee not valid or does not exist and cannot be assigned to state(s)."
         delete="Employee has states and cannot be deleted."/>
    <!--[EmployeeBranch]-->
    <add key="PK_EmployeeBranch"
         primary="[Owner].[EmployeeBranch]"
         foreign=""
         insert="Employee and branch combination must be unique."
         update="Employee and branch combination must be unique."
         delete=""/>
    <add key="CK_EmployeeBranch_EmployeeId_BranchId"
         primary="[Owner].[EmployeeBranch]"
         foreign=""
         insert="Organisation of employee and branch must be the same."
         update="Organisation of employee and branch must be the same."
         delete=""/>
    <add key="FK_EmployeeBranch_Employee"
         primary="[Owner].[Employee]"
         foreign="[Owner].[EmployeeBranch]"
         insert="Employee not valid or does not exist and cannot be assigned to branch(s)."
         update="Employee not valid or does not exist and cannot be assigned to branch(s)."
         delete="Employee has branches and cannot be deleted."/>
    <add key="FK_EmployeeBranch_Branch"
         primary="[Owner].[Branch]"
         foreign="[Owner].[EmployeeBranch]"
         insert="Branch not valid or does not exist and cannot be assigned to employee(s)."
         update="Branch not valid or does not exist and cannot be assigned to employee(s)."
         delete="Branch has employees and cannot be deleted."/>
    <!--[Post]-->
    <add key="UK_Post_OrganisationId_Code"
         primary="[Owner].[Post]"
         foreign=""
         insert="Post code must be unique for selected organisation."
         update="Post code must be unique for selected organisation."
         delete=""/>
    <add key="FK_Post_Organisation"
         primary="[Owner].[Organisation]"
         foreign="[Owner].[Post]"
         insert="Organisation not valid or does not exist and cannot be assigned to post(s)."
         update="Organisation not valid or does not exist and cannot be assigned to post(s)."
         delete="Organisation has post(s) and cannot be deleted."/>
    <!--[Layout]-->
    <add key="UK_Layout_OrganisationId_LayoutEntityType_Code"
         primary="[Owner].[Layout]"
         foreign=""
         insert="Layout code must be unique for selected organisation and entity type."
         update="Layout code must be unique for selected organisation and entity type."
         delete=""/>
    <add key="FK_Layout_Organisation"
         primary="[Owner].[Organisation]"
         foreign="[Owner].[Layout]"
         insert="Organisation not valid or does not exist and cannot be assigned to layout(s)."
         update="Organisation not valid or does not exist and cannot be assigned to layout(s)."
         delete="Organisation has layout(s) and cannot be deleted."/>

    <!--[Owner.Branch]-->
    <!--[Split]-->
    <add key="UK_BranchSplit_OrganisationId_Code"
         primary="[Owner.Branch].[Split]"
         foreign=""
         insert="Branch split code must be unique for selected organisation."
         update="Branch split code must be unique for selected organisation."
         delete=""/>
    <add key="UI_BranchSplit_OrganisationId_SplitBranchType"
         primary="[Owner.Branch].[Split]"
         foreign=""
         insert="Branch split type can be null or only one for selected organisation."
         update="Branch split type can be null or only one for selected organisation."
         delete=""/>
    <add key="FK_BranchSplit_Organisation"
         primary="[Owner].[Organisation]"
         foreign="[Owner.Branch].[Split]"
         insert="Organisation not valid or does not exist and cannot be assigned to document split(s)."
         update="Organisation not valid or does not exist and cannot be assigned to document split(s)."
         delete="Organisation has document split(s) and cannot be deleted."/>
    <!--[Group]-->
    <add key="UK_BranchGroup_SplitId_Code"
         primary="[Owner.Branch].[Group]"
         foreign=""
         insert="Branch group code must be unique for selected article split."
         update="Branch group code must be unique for selected article split."
         delete=""/>
    <add key="UI_BranchGroup_SplitId_IsDefault"
         primary="[Owner.Branch].[Group]"
         foreign=""
         insert="Branch group default status can be only one for selected article split."
         update="Branch group default status can be only one for selected article split."
         delete=""/>
    <add key="UI_BranchGroup_SplitId_Index"
         primary="[Owner.Branch].[Group]"
         foreign=""
         insert="Branch group index must be unique for selected article split."
         update="Branch group index must be unique for selected article split."
         delete=""/>
    <add key="FK_BranchGroup_BranchSplit"
         primary="[Owner.Branch].[Split]"
         foreign="[Owner.Branch].[Group]"
         insert="Branch split not valid or does not exist and cannot be assigned to branch group(s)."
         update="Branch split not valid or does not exist and cannot be assigned to branch group(s)."
         delete="Branch split has branch group(s) and cannot be deleted."/>
    <!--[Bond]-->
    <add key="PK_BranchBond"
         primary="[Owner.Branch].[Bond]"
         foreign=""
         insert="Branch and group combination must be unique."
         update="Branch and group combination must be unique."
         delete=""/>
    <add key="CK_BranchBond_Organisation_BranchId_GroupId"
         primary="[Owner.Branch].[Bond]"
         foreign=""
         insert="Organisation of branch group and branch must be the same."
         update="Organisation of branch group and branch must be the same."
         delete=""/>
    <add key="CK_BranchBond_Split_BranchId_GroupId"
         primary="[Owner.Branch].[Bond]"
         foreign=""
         insert="Branch cannot be assigned more than once to the same exclusive split."
         update="Branch cannot be assigned more than once to the same exclusive split."
         delete=""/>
    <add key="FK_BranchBond_Branch"
         primary="[Owner].[Branch]"
         foreign="[Owner.Branch].[Bond]"
         insert="Branch not valid or does not exist and cannot be assigned to branch group(s)."
         update="Branch not valid or does not exist and cannot be assigned to branch group(s)."
         delete="Branch has branch group(s) and cannot be deleted."/>
    <add key="FK_BranchBond_BranchGroup"
         primary="[Owner.Branch].[Group]"
         foreign="[Owner.Branch].[Bond]"
         insert="Branch group not valid or does not exist and cannot be assigned to branch(s)."
         update="Branch group not valid or does not exist and cannot be assigned to branch(s)."
         delete="Branch group has assigned branch(s) and cannot be deleted."/>

    <!--[Owner.Post]-->
    <!--[Split]-->
    <add key="UK_PostSplit_OrganisationId_Code"
         primary="[Owner.Post].[Split]"
         foreign=""
         insert="Post split code must be unique for selected organisation."
         update="Post split code must be unique for selected organisation."
         delete=""/>
    <add key="UI_PostSplit_OrganisationId_SplitPostType"
         primary="[Owner.Post].[Split]"
         foreign=""
         insert="Post split type can be null or only one for selected organisation."
         update="Post split type can be null or only one for selected organisation."
         delete=""/>
    <add key="FK_PostSplit_Organisation"
         primary="[Owner].[Organisation]"
         foreign="[Owner.Post].[Split]"
         insert="Organisation not valid or does not exist and cannot be assigned to document split(s)."
         update="Organisation not valid or does not exist and cannot be assigned to document split(s)."
         delete="Organisation has document split(s) and cannot be deleted."/>
    <!--[Group]-->
    <add key="UK_PostGroup_SplitId_Code"
         primary="[Owner.Post].[Group]"
         foreign=""
         insert="Post group code must be unique for selected article split."
         update="Post group code must be unique for selected article split."
         delete=""/>
    <add key="UI_PostGroup_SplitId_IsDefault"
         primary="[Owner.Post].[Group]"
         foreign=""
         insert="Post group default status can be only one for selected article split."
         update="Post group default status can be only one for selected article split."
         delete=""/>
    <add key="FK_PostGroup_PostSplit"
         primary="[Owner.Post].[Split]"
         foreign="[Owner.Post].[Group]"
         insert="Post split not valid or does not exist and cannot be assigned to post group(s)."
         update="Post split not valid or does not exist and cannot be assigned to post group(s)."
         delete="Post split has post group(s) and cannot be deleted."/>
    <!--[Bond]-->
    <add key="PK_PostBond"
         primary="[Owner.Post].[Bond]"
         foreign=""
         insert="Post and group combination must be unique."
         update="Post and group combination must be unique."
         delete=""/>
    <add key="CK_PostBond_Organisation_PostId_GroupId"
         primary="[Owner.Post].[Bond]"
         foreign=""
         insert="Organisation of post group and post must be the same."
         update="Organisation of post group and post must be the same."
         delete=""/>
    <add key="CK_PostBond_Split_PostId_GroupId"
         primary="[Owner.Post].[Bond]"
         foreign=""
         insert="Post cannot be assigned more than once to the same exclusive split."
         update="Post cannot be assigned more than once to the same exclusive split."
         delete=""/>
    <add key="FK_PostBond_Post"
         primary="[Owner].[Post]"
         foreign="[Owner.Post].[Bond]"
         insert="Post not valid or does not exist and cannot be assigned to post group(s)."
         update="Post not valid or does not exist and cannot be assigned to post group(s)."
         delete="Post has post group(s) and cannot be deleted."/>
    <add key="FK_PostBond_PostGroup"
         primary="[Owner.Post].[Group]"
         foreign="[Owner.Post].[Bond]"
         insert="Post group not valid or does not exist and cannot be assigned to post(s)."
         update="Post group not valid or does not exist and cannot be assigned to post(s)."
         delete="Post group has assigned post(s) and cannot be deleted."/>

    <!--[Multicurrency]-->
    <!--[Currency]-->
    <add key="UK_Currency_OrganisationId_Code"
         primary="[Multicurrency].[Currency]"
         foreign=""
         insert="Currency code must be unique for selected organisation."
         update="Currency code must be unique for selected organisation."
         delete=""/>
    <add key="UI_Currency_OrganisationId_IsDefault"
         primary="[Owner].[Employee]"
         foreign=""
         insert="Currency default status can be only one for selected organisation."
         update="Currency default status can be only one for selected organisation."
         delete=""/>
    <add key="FK_Currency_Organisation"
         primary="[Owner].[Organisation]"
         foreign="[Multicurrency].[Currency]"
         insert="Organisation not valid or does not exist and cannot be assigned to currency(s)."
         update="Organisation not valid or does not exist and cannot be assigned to currency(s)."
         delete="Organisation has currency(s) and cannot be deleted."/>
    <!--[Trade]-->
    <add key="UK_Trade_OrganisationId_Code"
         primary="[Multicurrency].[Trade]"
         foreign=""
         insert="Trade code must be unique for selected organisation."
         update="Trade code must be unique for selected organisation."
         delete=""/>
    <add key="CK_Trade_From_To"
         primary="[Multicurrency].[Trade]"
         foreign=""
         insert="Trade from date must be less than trade to date or concurrently shall be null."
         update="Trade from date must be less than trade to date or concurrently shall be null."
         delete=""/>
    <add key="CK_Trade_Id_OrganisationId_From_To"
         primary="[Multicurrency].[Trade]"
         foreign=""
         insert="Trade interval cannot overlap for the same organisation."
         update="Trade interval cannot overlap for the same organisation."
         delete=""/>
    <add key="FK_Trade_Organisation"
         primary="[Owner].[Organisation]"
         foreign="[Multicurrency].[Trade]"
         insert="Organisation not valid or does not exist and cannot be assigned to trade(s)."
         update="Organisation not valid or does not exist and cannot be assigned to trade(s)."
         delete="Organisation is assigned to trade(s) and cannot be deleted."/>
    <!--[Rate]-->
    <add key="UK_Rate_TradeId_CurrencyFrom_CurrencyTo"
         primary="[Multicurrency].[Rate]"
         foreign=""
         insert="Combination of currency from and currency to must be unique for selected trade."
         update="Combination of currency from and currency to must be unique for selected trade."
         delete=""/>
    <add key="CK_Rate_TradeId_CurrencyFrom_CurrencyTo"
         primary="[Multicurrency].[Rate]"
         foreign=""
         insert="Organisation of trade and currencies (from/to) must be the same."
         update="Organisation of trade and currencies (from/to) must be the same."
         delete=""/>
    <add key="FK_Rate_Trade"
         primary="[Multicurrency].[Trade]"
         foreign="[Multicurrency].[Rate]"
         insert="Trade not valid or does not exist and cannot be assigned to rate(s)."
         update="Trade not valid or does not exist and cannot be assigned to rate(s)."
         delete="Trade has rate(s) and cannot be deleted."/>
    <add key="FK_Rate_Currency_From"
         primary="[Multicurrency].[Currency]"
         foreign="[Multicurrency].[Rate]"
         insert="Currency from not valid or does not exist and cannot be assigned to rate(s)."
         update="Currency from not valid or does not exist and cannot be assigned to rate(s)."
         delete="Currency from has rate(s) and cannot be deleted."/>
    <add key="FK_Rate_Currency_To"
         primary="[Multicurrency].[Currency]"
         foreign="[Multicurrency].[Rate]"
         insert="Currency to not valid or does not exist and cannot be assigned to rate(s)."
         update="Currency to not valid or does not exist and cannot be assigned to rate(s)."
         delete="Currency to has rate(s) and cannot be deleted."/>

    <!--[GeolocationDatabase]-->

    <!--[Geolocation]-->
    <!--[Source]-->
    <add key="UK_Source_Code"
         primary="[Geolocation].[Source]"
         foreign=""
         insert="Source code must be unique."
         update="Source code must be unique."
         delete=""/>
    <!--[Portion]-->
    <add key="UK_Portion_SourceId_Code"
         primary="[Geolocation].[Portion]"
         foreign=""
         insert="Portion code must be unique for selected source."
         update="Portion code must be unique for selected source."
         delete=""/>
    <add key="FK_Portion_Source"
         primary="[Geolocation].[Source]"
         foreign="[Geolocation].[Portion]"
         insert="Source not valid or does not exist and cannot be assigned to portion(s)."
         update="Source not valid or does not exist and cannot be assigned to portion(s)."
         delete="Source is assigned to portion(s) and cannot be deleted."/>
    <!--[Location]-->
    <add key="PK_Location"
         primary="[Geolocation].[Location]"
         foreign=""
         insert="Location code must be unique."
         update="Location code must be unique."
         delete=""/>
    <!--[Block]-->
    <add key="PK_Block"
         primary="[Geolocation].[Block]"
         foreign=""
         insert="Combination of IP block numbers must be unique."
         update="Combination of IP block numbers must be unique."
         delete=""/>
    <add key="FK_Block_Location"
         primary="[Geolocation].[Location]"
         foreign="[Geolocation].[Block]"
         insert="Location not valid or does not exist and cannot be assigned to block(s)."
         update="Location not valid or does not exist and cannot be assigned to block(s)."
         delete="Location is assigned to block(s) and cannot be deleted."/>

  </database.constraints>

  <service.roles>
    <role code="OperationalAdministrator">
      <permission code="PresetCreate"/>
      <permission code="PresetRead"/>
      <permission code="PresetUpdate"/>
      <permission code="PresetDelete"/>
      <permission code="PresetSearch"/>
      <permission code="SplitCreate"/>
      <permission code="SplitRead"/>
      <permission code="SplitUpdate"/>
      <permission code="SplitDelete"/>
      <permission code="SplitSearch"/>
      <permission code="GroupCreate"/>
      <permission code="GroupRead"/>
      <permission code="GroupUpdate"/>
      <permission code="GroupDelete"/>
      <permission code="GroupSearch"/>
      <permission code="BondRead"/>
      <permission code="BondSearch"/>
      <permission code="TokenUpdate"/>
      <permission code="TokenSearch"/>
      <permission code="FilestreamRead"/>
      <permission code="FilestreamSearch"/>
      <permission code="EmplacementSearch"/>
      <permission code="ApplicationSearch"/>
      <permission code="PermissionSearch"/>
      <permission code="UserRead"/>
      <permission code="UserSearch"/>
      <permission code="LogCreate"/>
      <permission code="PersonCreate"/>
      <permission code="PersonRead"/>
      <permission code="PersonUpdate"/>
      <permission code="PersonSearch"/>
      <permission code="MarkCreate"/>
      <permission code="MarkRead"/>
      <permission code="MarkUpdate"/>
      <permission code="MarkDelete"/>
      <permission code="MarkSearch"/>
      <permission code="OrganisationCreate"/>
      <permission code="OrganisationRead"/>
      <permission code="OrganisationUpdate"/>
      <permission code="OrganisationSearch"/>
      <permission code="BranchSplitCreate"/>
      <permission code="BranchSplitRead"/>
      <permission code="BranchSplitUpdate"/>
      <permission code="BranchSplitDelete"/>
      <permission code="BranchSplitSearch"/>
      <permission code="BranchGroupCreate"/>
      <permission code="BranchGroupRead"/>
      <permission code="BranchGroupUpdate"/>
      <permission code="BranchGroupDelete"/>
      <permission code="BranchGroupSearch"/>
      <permission code="BranchBondRead"/>
      <permission code="BranchBondSearch"/>
      <permission code="BranchCreate"/>
      <permission code="BranchRead"/>
      <permission code="BranchUpdate"/>
      <permission code="BranchDelete"/>
      <permission code="BranchSearch"/>
      <permission code="EmployeeCreate"/>
      <permission code="EmployeeRead"/>
      <permission code="EmployeeUpdate"/>
      <permission code="EmployeeDelete"/>
      <permission code="EmployeeSearch"/>
      <permission code="PostSplitCreate"/>
      <permission code="PostSplitRead"/>
      <permission code="PostSplitUpdate"/>
      <permission code="PostSplitDelete"/>
      <permission code="PostSplitSearch"/>
      <permission code="PostGroupCreate"/>
      <permission code="PostGroupRead"/>
      <permission code="PostGroupUpdate"/>
      <permission code="PostGroupDelete"/>
      <permission code="PostGroupSearch"/>
      <permission code="PostBondRead"/>
      <permission code="PostBondSearch"/>
      <permission code="PostCreate"/>
      <permission code="PostRead"/>
      <permission code="PostUpdate"/>
      <permission code="PostDelete"/>
      <permission code="PostSearch"/>
      <permission code="LayoutCreate"/>
      <permission code="LayoutRead"/>
      <permission code="LayoutUpdate"/>
      <permission code="LayoutDelete"/>
      <permission code="LayoutSearch"/>
    </role>
    <role code="OperationalAdministrator">
      <permission code="PresetCreate"/>
      <permission code="PresetRead"/>
      <permission code="PresetUpdate"/>
      <permission code="PresetDelete"/>
      <permission code="PresetSearch"/>
      <permission code="SplitRead"/>
      <permission code="SplitSearch"/>
      <permission code="GroupRead"/>
      <permission code="GroupSearch"/>
      <permission code="BondRead"/>
      <permission code="BondSearch"/>
      <permission code="TokenUpdate"/>
      <permission code="TokenSearch"/>
      <permission code="FilestreamRead"/>
      <permission code="FilestreamSearch"/>
      <permission code="EmplacementSearch"/>
      <permission code="ApplicationSearch"/>
      <permission code="PermissionSearch"/>
      <permission code="LogCreate"/>
      <permission code="PersonRead"/>
      <permission code="PersonSearch"/>
      <permission code="MarkCreate"/>
      <permission code="MarkRead"/>
      <permission code="MarkUpdate"/>
      <permission code="MarkDelete"/>
      <permission code="MarkSearch"/>
      <permission code="OrganisationRead"/>
      <permission code="OrganisationSearch"/>
      <permission code="BranchSplitRead"/>
      <permission code="BranchSplitSearch"/>
      <permission code="BranchGroupRead"/>
      <permission code="BranchGroupSearch"/>
      <permission code="BranchBondRead"/>
      <permission code="BranchBondSearch"/>
      <permission code="BranchRead"/>
      <permission code="BranchSearch"/>
      <permission code="EmployeeRead"/>
      <permission code="EmployeeSearch"/>
      <permission code="PostSplitRead"/>
      <permission code="PostSplitSearch"/>
      <permission code="PostGroupRead"/>
      <permission code="PostGroupSearch"/>
      <permission code="PostBondRead"/>
      <permission code="PostBondSearch"/>
      <permission code="PostRead"/>
      <permission code="PostSearch"/>
      <permission code="LayoutRead"/>
      <permission code="LayoutSearch"/>
    </role>
  </service.roles>

</configuration>